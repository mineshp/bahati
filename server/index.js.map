{
  "version": 3,
  "sources": ["../node_modules/@remix-run/dev/dist/compiler/shims/react.ts", "../mocks/index.js", "../server.ts", "server-entry-module:@remix-run/dev/server-build", "../app/entry.server.tsx", "../app/root.tsx", "../app/navbar.tsx", "../app/footer.tsx", "../app/session.server.ts", "../app/models/user.server.ts", "../app/routes/shares/query-exchange-rate.ts", "../app/models/shares.server.ts", "../app/utils/shares.ts", "../app/utils/date.ts", "../app/mocks/mockShareData.ts", "../app/mocks/mockShareDataByPeriod.ts", "../app/mocks/mockExchangeRates.ts", "../app/mocks/mockPurchasedShareDataByCode.ts", "../app/routes/shares/query-share-data.ts", "../app/routes/shares/$shareCode.tsx", "../app/components/currentDayShareHeader.tsx", "../app/components/library/pillHeader.tsx", "../app/components/shareValueCards.tsx", "../app/components/information.tsx", "../app/components/library/pill.tsx", "../app/components/shareGraph.tsx", "../app/components/shareNav.tsx", "../app/components/chart.tsx", "../app/components/table.tsx", "../app/routes/shares/index.tsx", "../app/routes/logout.tsx", "../app/routes/index.tsx", "../app/routes/login.tsx", "../app/utils.ts", "../app/routes/notes.tsx", "../app/models/note.server.ts", "../app/routes/notes/$noteId.tsx", "../app/routes/notes/index.tsx", "../app/routes/notes/new.tsx", "../app/routes/join.tsx", "../cypress/support/test-routes/create-user.ts", "server-assets-manifest:@remix-run/dev/assets-manifest"],
  "sourcesContent": ["// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "const { setupServer } = require(\"msw/node\");\n\nconst server = setupServer();\n\nserver.listen({ onUnhandledRequest: \"bypass\" });\n\nprocess.once(\"SIGINT\", () => server.close());\nprocess.once(\"SIGTERM\", () => server.close());\n", "import { createRequestHandler } from \"@remix-run/architect\";\nimport * as build from \"@remix-run/dev/server-build\";\n\nif (process.env.NODE_ENV !== \"production\") {\n  require(\"./mocks\");\n}\n\nexport const handler = createRequestHandler({\n  build,\n  mode: process.env.NODE_ENV,\n});\n", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/shares/query-exchange-rate.ts\";\nimport * as route2 from \"./routes/shares/query-share-data.ts\";\nimport * as route3 from \"./routes/shares/$shareCode.tsx\";\nimport * as route4 from \"./routes/shares/index.tsx\";\nimport * as route5 from \"./routes/logout.tsx\";\nimport * as route6 from \"./routes/index.tsx\";\nimport * as route7 from \"./routes/login.tsx\";\nimport * as route8 from \"./routes/notes.tsx\";\nimport * as route9 from \"./routes/notes/$noteId.tsx\";\nimport * as route10 from \"./routes/notes/index.tsx\";\nimport * as route11 from \"./routes/notes/new.tsx\";\nimport * as route12 from \"./routes/join.tsx\";\nimport * as route13 from \"./../cypress/support/test-routes/create-user.ts\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const publicPath = \"/_static/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/shares/query-exchange-rate\": {\n      id: \"routes/shares/query-exchange-rate\",\n      parentId: \"root\",\n      path: \"shares/query-exchange-rate\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/shares/query-share-data\": {\n      id: \"routes/shares/query-share-data\",\n      parentId: \"root\",\n      path: \"shares/query-share-data\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/shares/$shareCode\": {\n      id: \"routes/shares/$shareCode\",\n      parentId: \"root\",\n      path: \"shares/:shareCode\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/shares/index\": {\n      id: \"routes/shares/index\",\n      parentId: \"root\",\n      path: \"shares\",\n      index: true,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/notes\": {\n      id: \"routes/notes\",\n      parentId: \"root\",\n      path: \"notes\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/notes/$noteId\": {\n      id: \"routes/notes/$noteId\",\n      parentId: \"routes/notes\",\n      path: \":noteId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/notes/index\": {\n      id: \"routes/notes/index\",\n      parentId: \"routes/notes\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/notes/new\": {\n      id: \"routes/notes/new\",\n      parentId: \"routes/notes\",\n      path: \"new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/join\": {\n      id: \"routes/join\",\n      parentId: \"root\",\n      path: \"join\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"../cypress/support/test-routes/create-user\": {\n      id: \"../cypress/support/test-routes/create-user\",\n      parentId: \"root\",\n      path: \"__tests/create-user\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    }\n  };", "import { PassThrough } from \"stream\";\nimport { renderToPipeableStream } from \"react-dom/server\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { Response } from \"@remix-run/node\";\nimport type { EntryContext, Headers } from \"@remix-run/node\";\nimport isbot from \"isbot\";\n\nconst ABORT_DELAY = 5000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const callbackName = isbot(request.headers.get(\"user-agent\"))\n    ? \"onAllReady\"\n    : \"onShellReady\";\n\n  return new Promise((resolve, reject) => {\n    let didError = false;\n\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer context={remixContext} url={request.url} />,\n      {\n        [callbackName]() {\n          let body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              status: didError ? 500 : responseStatusCode,\n              headers: responseHeaders,\n            })\n          );\n          pipe(body);\n        },\n        onShellError(err: unknown) {\n          reject(err);\n        },\n        onError(error: unknown) {\n          didError = true;\n          console.error(error);\n        },\n      }\n    );\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import type {\n  LinksFunction,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useLoaderData,\n} from \"@remix-run/react\";\nimport Navbar from \"./navbar\";\nimport Footer from \"./footer\";\nimport tailwindStylesheetUrl from \"./styles/tailwind.css\";\nimport { getUser } from \"./session.server\";\n\nexport const links: LinksFunction = () => {\n  return [\n    { rel: \"stylesheet\", href: tailwindStylesheetUrl },\n    // NOTE: Architect deploys the public directory to /_static/\n    { rel: \"icon\", href: \"/_static/favicon.ico\" },\n    {\n      rel: \"stylesheet\",\n      href: \"https://fonts.googleapis.com/css2?family=Arizonia&family=Bebas+Neue&family=Oswald:wght@300;400;700&display=swap\",\n    },\n  ];\n};\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"Are you feeling Bahati\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\ntype LoaderData = {\n  user: Awaited<ReturnType<typeof getUser>>;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  return json<LoaderData>({\n    user: await getUser(request),\n  });\n};\n\nexport default function App() {\n  const { user } = useLoaderData() as LoaderData;\n  return (\n    <html lang=\"en\" className=\"h-full\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"h-full\">\n        <Navbar user={user} />\n        <Outlet />\n        <ScrollRestoration />\n        <Footer />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import { Fragment } from \"react\";\nimport { Disclosure, Menu, Transition } from \"@headlessui/react\";\nimport { MenuIcon, XIcon, UserIcon } from \"@heroicons/react/outline\";\nimport { ChevronDownIcon } from \"@heroicons/react/solid\";\n\nconst navigation = [\n  { name: \"Dashboard\", href: \"/\", current: true },\n  { name: \"Watchlists\", href: \"#\", current: false },\n];\n\nconst shares = [\n  { name: \"VOW.DE\", href: \"/shares/VOW3.DE\", logo: \"/_static/logos/vw.png\" },\n  { name: \"NFLX\", href: \"/shares/NFLX\", logo: \"/_static/logos/netflix.png\" },\n  { name: \"BP.L\", href: \"/shares/BP.L\", logo: \"/_static/logos/bp.png\" },\n  { name: \"TSLA\", href: \"/shares/TSLA\", logo: \"/_static/logos/tesla.png\" },\n  { name: \"SPCE\", href: \"/shares/SPCE\", logo: \"/_static/logos/spce.jpg\" },\n  {\n    name: \"ROO.L\",\n    href: \"/shares/ROO.L\",\n    logo: \"/_static/logos/deliveroo.jpeg\",\n  },\n  { name: \"ENR\", href: \"/shares/ENR\", logo: \"/_static/logos/energizer.png\" },\n  { name: \"BABA\", href: \"/shares/BABA\", logo: \"/_static/logos/baba.png\" },\n];\n\nfunction classNames(...classes: string[]) {\n  return classes.filter(Boolean).join(\" \");\n}\n\ninterface Props {\n  user: {\n    id: string;\n    username: string;\n  } | null;\n}\n\nexport default function NavBar(props: Props) {\n  const { user } = props;\n\n  return user?.username ? (\n    <Disclosure as=\"nav\" className=\"bg-indigo-200\">\n      {({ open }) => (\n        <>\n          <div className=\"max-w-8xl px-2 sm:px-6 lg:px-8\">\n            <div className=\"relative flex h-16 items-center justify-between\">\n              <div className=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\n                {/* Mobile menu button*/}\n                <Disclosure.Button className=\"inline-flex items-center justify-center rounded-md p-2 text-indigo-500 hover:bg-indigo-500 hover:text-white\">\n                  <span className=\"sr-only\">Open main menu</span>\n                  {open ? (\n                    <XIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n                  ) : (\n                    <MenuIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n                  )}\n                </Disclosure.Button>\n              </div>\n              <div className=\"flex flex-1 items-center justify-center sm:items-stretch sm:justify-start\">\n                <div className=\"flex flex-shrink-0 items-center\">\n                  <img\n                    className=\"block h-10 w-auto lg:hidden\"\n                    src=\"/_static/bahati_logo.png\"\n                    alt=\"Workflow\"\n                  />\n                  <img\n                    className=\"hidden h-10 w-auto lg:block\"\n                    src=\"/_static/bahati_logo.png\"\n                    alt=\"Workflow\"\n                  />\n                </div>\n                <div className=\"hidden sm:ml-6 sm:block\">\n                  <div className=\"flex space-x-4\">\n                    {navigation.map((item) => (\n                      <a\n                        key={item.name}\n                        href={item.href}\n                        className={classNames(\n                          item.current\n                            ? \"text-rose-600\"\n                            : \"text-white hover:bg-rose-600 hover:text-white\",\n                          \"rounded-md px-3 py-2 text-sm font-medium\"\n                        )}\n                        aria-current={item.current ? \"page\" : undefined}\n                      >\n                        {item.name}\n                      </a>\n                    ))}\n                  </div>\n                </div>\n              </div>\n              <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0\">\n                <Menu as=\"div\" className=\"relative inline-block text-left\">\n                  <div>\n                    <Menu.Button className=\"inline-flex w-full justify-center rounded-md bg-rose-300 px-4 py-2 text-sm font-medium text-white hover:bg-rose-600\">\n                      {\"Shares\"}\n                      <ChevronDownIcon\n                        className=\"ml-2 -mr-1 h-5 w-5\"\n                        aria-hidden=\"true\"\n                      />\n                    </Menu.Button>\n                  </div>\n\n                  <Transition\n                    as={Fragment}\n                    enter=\"transition ease-out duration-100\"\n                    enterFrom=\"transform opacity-0 scale-95\"\n                    enterTo=\"transform opacity-100 scale-100\"\n                    leave=\"transition ease-in duration-75\"\n                    leaveFrom=\"transform opacity-100 scale-100\"\n                    leaveTo=\"transform opacity-0 scale-95\"\n                  >\n                    <Menu.Items className=\"absolute right-0 z-10 mt-2 w-40 origin-top-right rounded-md bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:w-56\">\n                      <div className=\"py-1\">\n                        {shares.map((shareItem) => (\n                          <Menu.Item key={shareItem.name}>\n                            {({ active }) => (\n                              <div className=\"flex hover:bg-rose-50\">\n                                <a\n                                  href={shareItem.href}\n                                  className={classNames(\n                                    active\n                                      ? \"bg-rose-50 text-indigo-900\"\n                                      : \"text-indigo-700\",\n                                    \"block grow px-4 py-2 text-sm\"\n                                  )}\n                                >\n                                  {shareItem.name}\n                                </a>\n                                <span className=\"my-auto flex-none pr-2\">\n                                  <img\n                                    className=\"min-h-8 w-8\"\n                                    src={shareItem.logo}\n                                    alt={shareItem.name}\n                                  ></img>\n                                </span>\n                              </div>\n                            )}\n                          </Menu.Item>\n                        ))}\n                      </div>\n                    </Menu.Items>\n                  </Transition>\n                </Menu>\n\n                {/* Profile dropdown */}\n                {user?.username ? (\n                  <Menu as=\"div\" className=\"relative z-20 ml-3\">\n                    <div>\n                      <Menu.Button className=\"flex rounded-full bg-gray-800 text-sm focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-800\">\n                        <span className=\"sr-only\">Open user menu</span>\n                        {user?.username ? (\n                          <img\n                            className=\"h-8 w-8 rounded-full\"\n                            src=\"/_static/min-profile.jpg\"\n                            alt={\n                              user?.username ? user?.username : \"Not logged in\"\n                            }\n                          />\n                        ) : (\n                          <MenuIcon\n                            className=\"block h-6 w-6\"\n                            aria-hidden=\"true\"\n                          />\n                        )}\n                      </Menu.Button>\n                    </div>\n                    <Transition\n                      as={Fragment}\n                      enter=\"transition ease-out duration-100\"\n                      enterFrom=\"transform opacity-0 scale-95\"\n                      enterTo=\"transform opacity-100 scale-100\"\n                      leave=\"transition ease-in duration-75\"\n                      leaveFrom=\"transform opacity-100 scale-100\"\n                      leaveTo=\"transform opacity-0 scale-95\"\n                    >\n                      <Menu.Items className=\"absolute right-0 mt-2 w-48 origin-top-right rounded-md bg-white py-1 shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\">\n                        <Menu.Item>\n                          {({ active }) => (\n                            <form action=\"/logout\" method=\"post\">\n                              <button\n                                type=\"submit\"\n                                className={classNames(\n                                  active ? \"bg-gray-100\" : \"\",\n                                  \"block px-4 py-2 text-sm text-gray-700\"\n                                )}\n                              >\n                                Sign out\n                              </button>\n                            </form>\n                          )}\n                        </Menu.Item>\n                      </Menu.Items>\n                    </Transition>\n                  </Menu>\n                ) : (\n                  <UserIcon\n                    className=\"ml-2 block h-6 w-6 text-slate-600\"\n                    aria-hidden=\"true\"\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n\n          <Disclosure.Panel className=\"sm:hidden\">\n            <div className=\"space-y-1 px-2 pt-2 pb-3\">\n              {navigation.map((item) => (\n                <Disclosure.Button\n                  key={item.name}\n                  as=\"a\"\n                  href={item.href}\n                  className={classNames(\n                    item.current\n                      ? \"bg-rose-300 text-white\"\n                      : \"text-rose-400 hover:bg-rose-600 hover:text-white\",\n                    \"block rounded-md px-3 py-2 text-base font-medium\"\n                  )}\n                  aria-current={item.current ? \"page\" : undefined}\n                >\n                  {item.name}\n                </Disclosure.Button>\n              ))}\n            </div>\n          </Disclosure.Panel>\n        </>\n      )}\n    </Disclosure>\n  ) : (\n    <Disclosure as=\"nav\" className=\"bg-indigo-200\">\n      {({ open }) => (\n        <>\n          <div className=\"max-w-8xl px-2 sm:px-6 lg:px-8\">\n            <div className=\"relative flex h-16 items-center justify-between\">\n              <div className=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\n                {/* Mobile menu button*/}\n              </div>\n              <div className=\"flex flex-1 items-center justify-center sm:items-stretch sm:justify-start\">\n                <div className=\"flex flex-shrink-0 items-center\">\n                  <img\n                    className=\"block h-10 w-auto lg:hidden\"\n                    src=\"/_static/bahati_logo.png\"\n                    alt=\"Workflow\"\n                  />\n                  <img\n                    className=\"hidden h-10 w-auto lg:block\"\n                    src=\"/_static/bahati_logo.png\"\n                    alt=\"Workflow\"\n                  />\n                </div>\n              </div>\n              <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0\">\n                <UserIcon\n                  className=\"ml-2 block h-6 w-6 text-slate-600\"\n                  aria-hidden=\"true\"\n                />\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </Disclosure>\n  );\n}\n", "export default function Footer() {\n  return (\n    <div className=\"flex items-center justify-between p-2 px-4 text-center text-white bg-rose-200\">\n      <img src=\"/_static/bahati_logo.png\"\n    alt=\"Bahati\" className=\"h-12\"/>\n    <span className=\"text-xl text-center font-arizonia\">Make it happen</span></div>\n  );\n};", "import { createCookieSessionStorage, redirect } from \"@remix-run/node\";\nimport invariant from \"tiny-invariant\";\n\nimport type { User } from \"~/models/user.server\";\nimport { getUserById } from \"~/models/user.server\";\n\ninvariant(process.env.SESSION_SECRET, \"SESSION_SECRET must be set\");\n\nexport const sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: \"__session\",\n    httpOnly: true,\n    path: \"/\",\n    sameSite: \"lax\",\n    secrets: [process.env.SESSION_SECRET],\n    secure: process.env.NODE_ENV === \"production\",\n  },\n});\n\nconst USER_SESSION_KEY = \"userId\";\n\nexport async function getSession(request: Request) {\n  const cookie = request.headers.get(\"Cookie\");\n  return sessionStorage.getSession(cookie);\n}\n\nexport async function getUserId(\n  request: Request\n): Promise<User[\"id\"] | undefined> {\n  const session = await getSession(request);\n  const userId = session.get(USER_SESSION_KEY);\n  return userId;\n}\n\nexport async function getUser(request: Request) {\n  const userId = await getUserId(request);\n  if (userId === undefined) return null;\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function requireUserId(\n  request: Request,\n  redirectTo: string = new URL(request.url).pathname\n) {\n  const userId = await getUserId(request);\n  if (!userId) {\n    const searchParams = new URLSearchParams([[\"redirectTo\", redirectTo]]);\n    throw redirect(`/login?${searchParams}`);\n  }\n  return userId;\n}\n\nexport async function requireUser(request: Request) {\n  const userId = await requireUserId(request);\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function createUserSession({\n  request,\n  userId,\n  remember,\n  redirectTo,\n}: {\n  request: Request;\n  userId: string;\n  remember: boolean;\n  redirectTo: string;\n}) {\n  const session = await getSession(request);\n  session.set(USER_SESSION_KEY, userId);\n  return redirect(redirectTo, {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.commitSession(session, {\n        maxAge: remember\n          ? 60 * 60 * 24 * 7 // 7 days\n          : undefined,\n      }),\n    },\n  });\n}\n\nexport async function logout(request: Request) {\n  const session = await getSession(request);\n  return redirect(\"/\", {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.destroySession(session),\n    },\n  });\n}\n", "import arc from \"@architect/functions\";\nimport bcrypt from \"bcryptjs\";\nimport invariant from \"tiny-invariant\";\n\nexport type User = { id: `username#${string}`; username: string };\nexport type Password = { password: string };\n\nexport async function getUserById(id: User[\"id\"]): Promise<User | null> {\n  const db = await arc.tables();\n  const result = await db.user.query({\n    KeyConditionExpression: \"pk = :pk\",\n    ExpressionAttributeValues: { \":pk\": id },\n  });\n\n  const [record] = result.Items;\n  if (record) return { id: record.pk, username: record.username };\n  return null;\n}\n\nexport async function getUserByUsername(username: User[\"username\"]) {\n  return getUserById(`username#${username}`);\n}\n\nasync function getUserPasswordByUsername(username: User[\"username\"]) {\n  const db = await arc.tables();\n  const result = await db.password.query({\n    KeyConditionExpression: \"pk = :pk\",\n    ExpressionAttributeValues: { \":pk\": `username#${username}` },\n  });\n\n  const [record] = result.Items;\n\n  if (record) return { hash: record.password };\n  return null;\n}\n\nexport async function createUser(\n  username: User[\"username\"],\n  password: Password[\"password\"]\n) {\n  const hashedPassword = await bcrypt.hash(password, 10);\n  const db = await arc.tables();\n  \n  await db.password.put({\n    pk: `username#${username}`,\n    password: hashedPassword,\n  });\n\n  await db.user.put({\n    pk: `username#${username}`,\n    username,\n  });\n\n  const user = await getUserByUsername(username);\n  invariant(user, `User not found after being created. This should not happen`);\n\n  return user;\n}\n\nexport async function deleteUser(username: User[\"username\"]) {\n  const db = await arc.tables();\n  await db.password.delete({ pk: `username#${username}` });\n  await db.user.delete({ pk: `username#${username}` });\n}\n\nexport async function verifyLogin(\n  username: User[\"username\"],\n  password: Password[\"password\"]\n) {\n  const userPassword = await getUserPasswordByUsername(username);\n\n  if (!userPassword) {\n    return undefined;\n  }\n\n  const isValid = await bcrypt.compare(password, userPassword.hash);\n  if (!isValid) {\n    return undefined;\n  }\n\n  return getUserByUsername(username);\n}\n", "import type { LoaderFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { getExchangeRate } from \"~/models/shares.server\";\n\nexport const loader: LoaderFunction = async ({request}) => {\n  const url = new URL(request.url)\n  const baseCurrency = url.searchParams.get('baseCurrency')\n  const data = await getExchangeRate(baseCurrency as string);\n  return json(data)\n}", "import type {\n  StockData,\n  StockDataByPeriodItem,\n  StockDataByPeriodItems,\n  TotalSharesItem,\n  ExchangeRate,\n  LastDayHighAndDayLow,\n} from \"../types/shares\";\nimport {\n  calcGainLossDailyPercentage,\n  calcGainLossDailyValue,\n} from \"../utils/shares\";\nimport { retrieveStartAndEndDates } from \"../utils/date\";\nimport { mockShareData } from \"../mocks/mockShareData\";\nimport { mockShareDataByPeriod } from \"../mocks/mockShareDataByPeriod\";\nimport { mockExchangeRates } from \"../mocks/mockExchangeRates\";\nimport { mockPurchasedShareDate } from \"~/mocks/mockPurchasedShareDataByCode\";\n\nasync function getLastDayHighAndDayLow(\n  code: string\n): Promise<LastDayHighAndDayLow> {\n  const { start, end } = retrieveStartAndEndDates(\"1W\");\n  const data = await getSharesByCodeAndPeriod(code, start, end);\n\n  let dayHigh = 0;\n  let dayLow = 0;\n  data.forEach(({ High, Low }) => {\n    if (!High && !Low) return;\n    dayHigh = Number(High.toFixed(2));\n    dayLow = Number(Low.toFixed(2));\n  });\n  return {\n    dayHigh,\n    dayLow,\n  };\n}\n\nexport async function getMockExchangeRates(\n  baseCurrency: string\n): Promise<ExchangeRate> {\n  const res = new Response(JSON.stringify(mockExchangeRates(baseCurrency)));\n  const data = await res.json();\n\n  return new Promise((resolve, reject) => resolve(data.rates[\"GBP\"]));\n}\n\nexport async function getExchangeRate(\n  baseCurrency: string\n): Promise<ExchangeRate> {\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"X-RapidAPI-Key\": \"a302ddd933msheaa6a723d9bad7dp14c6c2jsn47db43bc1b5f\",\n      \"X-RapidAPI-Host\": \"exchangerate-api.p.rapidapi.com\",\n    },\n  };\n\n  return fetch(\n    `https://exchangerate-api.p.rapidapi.com/rapid/latest/${baseCurrency} `,\n    options\n  )\n    .then((response) => response.json())\n    .then(({ rates }) => rates[\"GBP\"])\n    .catch((err) => console.error(err));\n}\n\nexport async function getShareDataByCode(code: string): Promise<StockData> {\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"X-RapidAPI-Key\": \"a302ddd933msheaa6a723d9bad7dp14c6c2jsn47db43bc1b5f\",\n      \"X-RapidAPI-Host\": \"apidojo-yahoo-finance-v1.p.rapidapi.com\",\n    },\n  };\n\n  const url = `https://apidojo-yahoo-finance-v1.p.rapidapi.com/stock/v2/get-summary?symbol=${code}`;\n\n  const response = await fetch(url, options)\n    .then((response) => response.json())\n    .then((response) => response)\n    .catch((err) => console.error(err));\n\n  const { defaultKeyStatistics, price, summaryDetail, summaryProfile } =\n    response;\n\n  const baseShareData = {\n    country: summaryProfile.country,\n    currentPrice: summaryDetail.open.fmt,\n    currency: price.currency,\n    longName: price.longName,\n    logo_url: \"UNKNOWN\",\n    exchange: price.exchangeName,\n    dayLow: summaryDetail.dayLow.fmt,\n    dayHigh: summaryDetail.dayHigh.fmt,\n    fiftyTwoWeekChange: defaultKeyStatistics[\"52WeekChange\"].fmt,\n  };\n\n  return {\n    ...baseShareData,\n  };\n}\n\nexport async function mockGetShareDataByCode(code: string): Promise<StockData> {\n  const res = new Response(JSON.stringify(mockShareData(code)));\n  const data = await res.json();\n\n  return { ...data };\n}\n\nexport async function getSharesByCodeAndPeriod(\n  code: string,\n  start: string,\n  end: string\n): Promise<StockDataByPeriodItems> {\n  const encodedParams = new URLSearchParams();\n  encodedParams.append(\"end\", end);\n  encodedParams.append(\"symbol\", code);\n  encodedParams.append(\"start\", start);\n\n  const url = \"https://yahoo-finance97.p.rapidapi.com/price-customdate\";\n\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/x-www-form-urlencoded\",\n      \"X-RapidAPI-Key\": \"a302ddd933msheaa6a723d9bad7dp14c6c2jsn47db43bc1b5f\",\n      \"X-RapidAPI-Host\": \"yahoo-finance97.p.rapidapi.com\",\n    },\n    body: encodedParams,\n  };\n\n  const { data } = await fetch(url, options)\n    .then((res) => res.json())\n    .catch((err) => console.error(\"error:\" + err));\n\n  return data.map((rec: StockDataByPeriodItem, i: number) => {\n    const previousDay = data[i - 1];\n    let gainLossValue = 0;\n    let gainLossPercentage = 0;\n    if (previousDay?.Close) {\n      gainLossValue = calcGainLossDailyValue(previousDay?.Close, rec?.Open);\n      gainLossPercentage = calcGainLossDailyPercentage(\n        previousDay?.Close,\n        rec?.Open\n      );\n    }\n    return { ...rec, gainLossValue, gainLossPercentage };\n  });\n}\n\nexport async function mockGetSharesByCodeAndPeriod(\n  code: string,\n  start: string,\n  end: string\n): Promise<StockDataByPeriodItems> {\n  const res = new Response(JSON.stringify(mockShareDataByPeriod(\"1W\")));\n\n  const data = await res.json();\n\n  return data.map((rec: StockDataByPeriodItem, i: number) => {\n    const previousDay = data[i - 1];\n    let gainLossValue = 0;\n    let gainLossPercentage = 0;\n    if (previousDay?.Close) {\n      gainLossValue = calcGainLossDailyValue(previousDay?.Close, rec?.Open);\n      gainLossPercentage = calcGainLossDailyPercentage(\n        previousDay?.Close,\n        rec?.Open\n      );\n    }\n    return { ...rec, gainLossValue, gainLossPercentage };\n  });\n}\n\nexport async function getSharesByCode(\n  code: string\n): Promise<TotalSharesItem[] | any> {\n  const url =\n    \"https://o9x8jijxn1.execute-api.eu-west-1.amazonaws.com/dev/api/stock-info\";\n\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n  };\n\n  return fetch(url, options)\n    .then((res) => res.json())\n    .then((data) => data[code])\n    .then(async (stockData) =>\n      Promise.all(\n        stockData.map(async (purchaseStock: TotalSharesItem) => {\n          const exchangeRate =\n            purchaseStock?.currency === \"GBP\"\n              ? 0.01\n              : await getExchangeRate(purchaseStock?.currency);\n          return { ...purchaseStock, exchangeRate };\n        })\n      )\n    )\n    .catch((err) => console.error(\"error:\" + err));\n}\n\nexport async function mockGetSharesByCode(\n  code: string\n): Promise<TotalSharesItem[] | any> {\n  const res = new Response(JSON.stringify(mockPurchasedShareDate(code)));\n\n  const data = await res.json();\n\n  return Promise.all(\n    data.map(async (purchaseStock: TotalSharesItem) => {\n      const exchangeRate =\n        purchaseStock?.currency === \"GBP\"\n          ? 0.01\n          : await getMockExchangeRates(purchaseStock?.currency);\n      return { ...purchaseStock, exchangeRate };\n    })\n  );\n}\n", "// export const calcGainLossPrice = (totalShares: number, originalSharePrice: number, currentSharePrice: number) => ((totalShares * currentSharePrice) - (totalShares * originalSharePrice)).toFixed(2);\n\nexport const calcGainLossPercentage = (totalShares: number, originalSharePrice: number, currentSharePrice: number) => Number((Number((Number(totalShares * currentSharePrice) - Number(totalShares * originalSharePrice)).toFixed(2)) / (totalShares * currentSharePrice)).toFixed(2));\n\nexport const calcGainLossDailyValue = (previousSharePrice: number, todaysSharePrice: number) => Number((Number(todaysSharePrice) - Number(previousSharePrice)).toFixed(3));\n\nexport const calcGainLossDailyPercentage = ((previousSharePrice: number, todaysSharePrice: number) => Number((Number(todaysSharePrice) - Number(previousSharePrice)).toFixed(3)) / Number(todaysSharePrice) * 100);\n\nexport const calcTotalShareValue = (totalShares: number, currentSharePrice: number, exchangeRate: number) => (totalShares * (currentSharePrice * exchangeRate)).toFixed(2);", "function subtractDateByDays(days: number) {\n  const today = new Date();\n  const start = today.setDate(today.getDate() - days);\n  return new Date(start).toISOString().slice(0, 10);\n}\n\nexport function retrieveStartAndEndDates(period: string) {\n  switch (period) {\n    case '1D':\n      return {\n        start: new Date().toISOString().slice(0, 10),\n        end: new Date().toISOString().slice(0, 10)\n      };\n    case '1W':\n      return {\n        start: subtractDateByDays(7),\n        end: new Date().toISOString().slice(0, 10),\n      };\n    case '1M':\n      return {\n        start: subtractDateByDays(30),\n        end: new Date().toISOString().slice(0, 10),\n      };\n    case '3M':\n      return {\n        start: subtractDateByDays(90),\n        end: new Date().toISOString().slice(0, 10),\n      };\n    case '1Y':\n      return {\n        start: subtractDateByDays(365),\n        end: new Date().toISOString().slice(0, 10),\n      };\n    default:\n      return {\n        start: new Date().toISOString().slice(0, 10),\n        end: new Date().toISOString().slice(0, 10)\n      };\n  }\n}\n\nexport function formatDateForDisplay(date: number | string) {\n  return new Date(date).toLocaleDateString('en-GB');\n}", "import type { StockData } from \"../types/shares\";\n\nconst mockShareHeaderData: { [key: string]: StockData } = {\n  TSLA: {\n    country: \"United States\",\n    currentPrice: 276.83,\n    currency: \"USD\",\n    dayHigh: 282.35,\n    dayLow: 274.28,\n    logo_url: \"https://logo.clearbit.com/tesla.com\",\n    longName: \"Tesla\",\n    exchange: \"NASDAQ\",\n    fiftyTwoWeekChange: \"-12.3%\",\n  },\n  NFLX: {\n    country: \"United States\",\n    currentPrice: 233.03,\n    currency: \"USD\",\n    dayHigh: 233.88,\n    dayLow: 225.05,\n    logo_url: \"https://logo.clearbit.com/netflix.com\",\n    longName: \"Netflix\",\n    exchange: \"NASDAQ\",\n    fiftyTwoWeekChange: \"2.3%\",\n  },\n  SPCE: {\n    country: \"United States\",\n    currentPrice: 5.85,\n    currency: \"USD\",\n    dayHigh: 5.95,\n    dayLow: 5.63,\n    logo_url: \"https://logo.clearbit.com/virgingalactic.com\",\n    longName: \"Virgin Galactic\",\n    exchange: \"NYSE\",\n    fiftyTwoWeekChange: \"-29.3%\",\n  },\n  \"VOW3.DE\": {\n    country: \"Germany\",\n    currentPrice: 148.96,\n    currency: \"EUR\",\n    dayHigh: 148.96,\n    dayLow: 141.38,\n    logo_url: \"https://logo.clearbit.com/volkswagenag.com\",\n    longName: \"Volkswagon\",\n    exchange: \"DE\",\n    fiftyTwoWeekChange: \"-1.3%\",\n  },\n  \"ROO.L\": {\n    country: \"United Kingdom\",\n    currentPrice: 81.3,\n    currency: \"GBP\",\n    dayHigh: 82.04,\n    dayLow: 76.1,\n    logo_url: \"https://logo.clearbit.com/deliveroo.com\",\n    longName: \"Deliveroo\",\n    exchange: \"LSE\",\n    fiftyTwoWeekChange: \"-1.3%\",\n  },\n  \"BP.L\": {\n    country: \"United Kingdom\",\n    currentPrice: 453.7,\n    currency: \"GBP\",\n    dayHigh: 457.55,\n    dayLow: 443.95,\n    logo_url: \"https://logo.clearbit.com/bp.com\",\n    longName: \"BP\",\n    exchange: \"LSE\",\n    fiftyTwoWeekChange: \"1.3%\",\n  },\n  ENR: {\n    country: \"United States\",\n    currentPrice: 28.01,\n    currency: \"USD\",\n    dayHigh: 28.65,\n    dayLow: 27.89,\n    logo_url: \"https://logo.clearbit.com/energizerholdings.com\",\n    longName: \"Energizer Holdings\",\n    exchange: \"NYSE\",\n    fiftyTwoWeekChange: \"-12.3%\",\n  },\n};\n\nexport function mockShareData(code: string): StockData {\n  return mockShareHeaderData[code];\n}\n", "import type { StockDataByPeriodItems } from '../types/shares';\n\nfunction randomNumber(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\nfunction createFakeData(period: number): StockDataByPeriodItems {\n  const now = new Date();\n  return [...Array(period).keys()].map((k) => {\n    let date = now.setDate(now.getDate()-1)\n    return ({\n    'Adj Close': randomNumber(300, 315),\n      Close: randomNumber(300, 315),\n      Date: date,\n      High: randomNumber(300, 315),\n      Low: randomNumber(300, 315),\n      Open: randomNumber(300, 315),\n      Volume: 55843347,\n      gainLossValue: randomNumber(1, 5),\n      gainLossPercentage: randomNumber(2,5)\n    })\n  });\n}\n\nconst mockShareDataByPeriodData: {[key:string]: StockDataByPeriodItems} = {\n  '1W': createFakeData(5),\n  '1M': createFakeData(30),\n  '3M': createFakeData(90),\n  '1Y': createFakeData(365)\n};\n\nexport function mockShareDataByPeriod(period: string): StockDataByPeriodItems {\n  return mockShareDataByPeriodData[period];\n}\n", "import type { ExchangeRate } from \"../types/shares\";\n\nexport function mockExchangeRates(baseCode: string): ExchangeRate {\n  const rates: { [key: string]: ExchangeRate } = {\n    USD: {\n      base_code: \"USD\",\n      documentation: \"usd\",\n      rates: {\n        USD: 1,\n        EUR: 0.948483,\n        GBP: 0.838326,\n      },\n    },\n    GBP: {\n      base_code: \"GBP\",\n      documentation: \"gbp\",\n      rates: {\n        USD: 1.21,\n        EUR: 1.13,\n        GBP: 1,\n      },\n    },\n    EUR: {\n      base_code: \"EUR\",\n      documentation: \"eur\",\n      rates: {\n        USD: 1.07,\n        EUR: 1,\n        GBP: 0.88,\n      },\n    },\n  };\n\n  return rates[baseCode];\n}\n", "import type { TotalShareItemsByCodePre } from \"../types/shares\";\nimport * as mockPurchasedShareData from \"./mockCurrentStocks.json\";\n\nexport function mockPurchasedShareDate(code: string): TotalShareItemsByCodePre {\n  const allStocks: { [key: string]: any } = {\n    ...mockPurchasedShareData,\n  };\n  return allStocks[code];\n}\n", "import type { LoaderFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { getSharesByCodeAndPeriod } from \"~/models/shares.server\";\n\nexport const loader: LoaderFunction = async ({request}) => {\n  const url = new URL(request.url)\n  const shareCode = url.searchParams.get('shareCode')\n  const start = url.searchParams.get('start')\n  const end = url.searchParams.get('end')\n  const data = await getSharesByCodeAndPeriod(shareCode as string, start as string, end as string);\n  return json(data)\n}", "import type {\n  ActionFunction,\n  LoaderFunction,\n  LinksFunction,\n} from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { useEffect, useState } from \"react\";\nimport {\n  useCatch,\n  useLoaderData,\n  useFetcher,\n  useParams,\n} from \"@remix-run/react\";\nimport invariant from \"tiny-invariant\";\nimport datepickerCss from \"react-datepicker/dist/react-datepicker.css\";\nimport {\n  mockGetShareDataByCode,\n  mockGetSharesByCodeAndPeriod,\n  mockGetSharesByCode,\n  getSharesByCode,\n  getShareDataByCode,\n  getSharesByCodeAndPeriod,\n} from \"~/models/shares.server\";\nimport type { StockDataByPeriodItems } from \"../../types/shares\";\nimport { retrieveStartAndEndDates } from \"../../utils/date\";\nimport CurrentDayShareHeader from \"../../components/currentDayShareHeader\";\nimport ShareValueCard from \"../../components/shareValueCards\";\nimport InformationBar from \"../../components/information\";\nimport ShareGraph from \"../../components/shareGraph\";\n\ntype LoaderData = {\n  shareHeaderData: Awaited<ReturnType<typeof getShareDataByCode>>;\n  shareData: Awaited<ReturnType<typeof getSharesByCodeAndPeriod>>;\n  totalSharesByCode: Awaited<ReturnType<typeof getSharesByCode>>;\n};\n\nexport const links: LinksFunction = () => [\n  { rel: \"stylesheet\", href: datepickerCss },\n];\n\nexport const loader: LoaderFunction = async ({ params }) => {\n  invariant(params.shareCode, \"Expected params.shareCode\");\n  const { start, end } = retrieveStartAndEndDates(\"1W\");\n\n  let shareHeaderData;\n  let shareData;\n  let totalSharesByCode;\n\n  if (process.env.NODE_ENV === \"development\") {\n    console.log(\"Dev mode: using mocks\");\n    shareHeaderData = await mockGetShareDataByCode(params?.shareCode as string);\n    shareData = await mockGetSharesByCodeAndPeriod(\n      params?.shareCode as string,\n      start,\n      end\n    );\n    totalSharesByCode = await mockGetSharesByCode(params?.shareCode as string);\n  } else {\n    shareHeaderData = await getShareDataByCode(params?.shareCode as string);\n    shareData = await getSharesByCodeAndPeriod(\n      params?.shareCode as string,\n      start,\n      end\n    );\n    totalSharesByCode = await getSharesByCode(params?.shareCode as string);\n  }\n\n  return json({\n    shareHeaderData,\n    shareData,\n    totalSharesByCode,\n  });\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const start = formData.get(\"start_date\");\n  const end = formData.get(\"end_date\");\n  const shareCode = formData.get(\"shareCode\");\n\n  let shareData;\n\n  if (process.env.NODE_ENV === \"development\") {\n    shareData = await mockGetSharesByCodeAndPeriod(\n      shareCode as string,\n      start as string,\n      end as string\n    );\n  } else {\n    shareData = await getSharesByCodeAndPeriod(\n      shareCode as string,\n      start as string,\n      end as string\n    );\n  }\n\n  return json({ shareData });\n};\n\nexport default function SharePage() {\n  const params = useParams();\n  const { shareHeaderData, shareData, totalSharesByCode } =\n    useLoaderData() as LoaderData;\n  const [displayData, setDisplayData] = useState<string>(\"chart\");\n  const [period, setPeriod] = useState(\"1W\");\n  const [start, setStart] = useState<string>(\n    retrieveStartAndEndDates(\"1W\").start\n  );\n  const [end, setEnd] = useState<string>(retrieveStartAndEndDates(\"1W\").end);\n  const [shareDataByPeriod, setShareDataByPeriod] =\n    useState<StockDataByPeriodItems>([]);\n  const fetcher = useFetcher();\n\n  // TODO: This does not look like the remix way of doing things\n  // set graph/table share data by period to shareDataByPeriod from loader\n  useEffect(() => {\n    if (shareDataByPeriod.length !== 0) {\n      setShareDataByPeriod(shareDataByPeriod);\n    } else {\n      setShareDataByPeriod(shareData);\n    }\n  }, [shareDataByPeriod, shareData]);\n\n  function handleDisplayMode(mode: string) {\n    setDisplayData(mode);\n  }\n\n  function handleStockPeriod(period: string) {\n    const data = retrieveStartAndEndDates(period);\n    setEnd(data?.end);\n    setStart(data?.start);\n    setPeriod(period);\n    fetcher.load(\n      `/shares/query-share-data?shareCode=${params.shareCode}&start=${data?.start}&end=${data?.end}`\n    );\n  }\n\n  useEffect(() => {\n    if (fetcher.data) {\n      setShareDataByPeriod(fetcher.data);\n    }\n  }, [fetcher]);\n\n  return (\n    shareDataByPeriod && (\n      <div>\n        <CurrentDayShareHeader\n          shareCode={params.shareCode as string}\n          data={shareHeaderData}\n        />\n        <InformationBar\n          exchangeData={totalSharesByCode}\n          shareData={shareHeaderData}\n        />\n        <ShareGraph\n          shareCode={params.shareCode as string}\n          displayData={displayData}\n          handleDisplayMode={handleDisplayMode}\n          handleStockPeriod={handleStockPeriod}\n          period={period}\n          start={start}\n          end={end}\n          shareDataByPeriod={shareDataByPeriod}\n          totalSharesByCode={totalSharesByCode}\n        />\n        <ShareValueCard\n          currentPrice={Number(shareHeaderData.currentPrice)}\n          shareData={totalSharesByCode}\n        />\n      </div>\n    )\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n\n  return <div>An unexpected error occurred: {error.message}</div>;\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  if (caught.status === 404) {\n    return <div>Share not found</div>;\n  }\n\n  throw new Error(`Unexpected caught response with status: ${caught.status}`);\n}\n", "import type { StockData } from \"../types/shares\";\nimport Pill from \"./library/pillHeader\";\n\ninterface Props {\n  data: StockData;\n  shareCode: string;\n}\n\nexport default function CurrentDayShareHeader(prop: Props) {\n  const { data, shareCode } = prop;\n\n  const randomBgHeader = [\n    {\n      bg: \"from-pink-400 to-blue-400\",\n      logoBgUrl: \"bg-[url('/_static/triangles-blue.svg')]\",\n    },\n    {\n      bg: \"from-sky-400 to-blue-600\",\n      logoBgUrl: \"bg-[url('/_static/triangles-pink.svg')]\",\n    },\n  ];\n\n  const randomHeader = Math.floor(Math.random() * randomBgHeader.length);\n\n  function extractStockName(data: StockData): string {\n    return data.longName\n      .substring(0, 15)\n      .replace(\",\", \"\")\n      .replace(\"Inc.\", \"\")\n      .trim()\n      .split(\" \")[0];\n  }\n\n  return (\n    <div className=\"px-4 pt-4\">\n      <div\n        className={`grid grid-cols-3 rounded-lg border-2 bg-gray-200 bg-gradient-to-r p-2 ${randomBgHeader[randomHeader].bg}`}\n      >\n        <div className=\"...\">\n          <div\n            className={`${randomBgHeader[randomHeader].logoBgUrl} table-cell h-16 w-16 rounded-full border-4 border-pink-200 bg-blue-500 p-2 text-center align-middle text-sm font-bold uppercase text-fuchsia-100`}\n          >\n            {shareCode.substring(0, 4).replace(\".L\", \"\").replace(\".\", \"\")}\n          </div>\n        </div>\n        <div className=\"... row-span-2 content-center items-center justify-center justify-items-center self-center text-center\">\n          <span className=\"block text-xs uppercase text-red-200\">\n            Current Price:{\" \"}\n          </span>\n          <span className=\"text-xl text-slate-100 sm:text-2xl\">\n            {data.currentPrice} {data.currency}\n          </span>\n        </div>\n        <div className=\"... flex flex-row justify-end\">\n          <Pill data={data.dayHigh} currency={data.currency} type=\"high\" />\n        </div>\n        <div className=\"... relative\">\n          <span className=\"absolute inset-x-0 bottom-0 items-center text-xs text-sky-200 sm:text-sm\">\n            {extractStockName(data)}:{data.exchange}\n          </span>\n        </div>\n        <div className=\"... flex flex-row justify-end\">\n          <Pill data={data.dayLow} currency={data.currency} type=\"low\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n", "interface Props {\n  data: number;\n  currency: string;\n  type: string;\n}\n\nexport default function Pill(props: Props): JSX.Element {\n  const { currency, data, type } = props;\n\n  return (\n    <div\n      className={`w-38 rounded-lg border ${\n        type === \"high\" ? \"border-teal-400\" : \"border-rose-400\"\n      } h-8 px-0.5 pt-1 text-right sm:h-10 sm:px-2`}\n    >\n      <span\n        className={`inline-block h-6 w-6 rounded-lg p-2 align-middle text-white ${\n          type === \"high\" ? \"bg-teal-400\" : \"bg-rose-400\"\n        } sm:h-7 sm:w-7`}\n      >\n        {type === \"high\" ? (\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            strokeWidth=\"1.5\"\n            stroke=\"currentColor\"\n            className=\"align-middle\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              d=\"M12 19.5v-15m0 0l-6.75 6.75M12 4.5l6.75 6.75\"\n            />\n          </svg>\n        ) : (\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            strokeWidth=\"1.5\"\n            stroke=\"currentColor\"\n            className=\"align-middle\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              d=\"M12 4.5v15m0 0l6.75-6.75M12 19.5l-6.75-6.75\"\n            />\n          </svg>\n        )}\n      </span>\n      <span\n        className={`inline-block pl-0.5 align-middle text-xs ${\n          type === \"high\" ? \"text-teal-50\" : \"text-rose-50\"\n        } sm:pl-2 sm:text-sm`}\n      >\n        {data} {currency}\n      </span>\n    </div>\n  );\n}\n", "import { calcTotalShareValue } from \"../utils/shares\";\nimport type { TotalShareItemsByCode } from \"../types/shares\";\nimport { useState } from \"react\";\ninterface Props {\n  currentPrice: number;\n  shareData: TotalShareItemsByCode;\n}\n\nexport default function ValueCard(props: Props) {\n  const { currentPrice, shareData } = props;\n  const [showCurrent, setShowCurrent] = useState<boolean>(false);\n  const [showProfitLoss, setShowProfitLoss] = useState<boolean>(false);\n\n  function handleToggleCurrent() {\n    setShowCurrent(!showCurrent);\n  }\n\n  function handleToggleProfitLoss() {\n    setShowProfitLoss(!showProfitLoss);\n  }\n\n  const totalValueSpent = shareData?.reduce((acc, shareData) => {\n    const valueSpent = Number(\n      calcTotalShareValue(\n        shareData.totalShares,\n        shareData.originalCostPrice,\n        shareData.purchaseExchangeRate\n      )\n    );\n    return acc + valueSpent;\n  }, 0);\n\n  const totalCurrentValue = shareData?.reduce((acc, shareData) => {\n    const valueSpent = Number(\n      calcTotalShareValue(\n        shareData.totalShares,\n        currentPrice,\n        shareData.exchangeRate\n      )\n    );\n    return acc + valueSpent;\n  }, 0);\n\n  const totalGainLoss = Number(\n    (Number(totalCurrentValue) - Number(totalValueSpent)).toFixed(2)\n  );\n\n  return (\n    <div className=\"flex justify-center p-4\">\n      <div className=\"container grid items-center gap-8 pb-8 sm:grid-cols-2 sm:gap-16 md:gap-24\">\n        <div\n          className={`items-center justify-center rounded-lg border border-rose-600 bg-gradient-to-r from-rose-100 to-rose-200 p-8 text-center ${\n            showCurrent ? \"\" : \"blur-sm\"\n          }`}\n          onClick={handleToggleCurrent}\n        >\n          <div className=\"text-2xl text-rose-500 sm:text-3xl\">\n            \u00A3{showCurrent ? totalCurrentValue?.toLocaleString(\"en-GB\") : \"shh\"}\n          </div>\n          <div className=\"text-xs uppercase text-rose-400\">Current Value</div>\n        </div>\n        <div\n          className={`items-center justify-center rounded-lg border border-indigo-500 bg-gradient-to-r  from-indigo-100 to-indigo-200 p-8 text-center ${\n            showProfitLoss ? \"\" : \"blur-sm\"\n          }`}\n          onClick={handleToggleProfitLoss}\n        >\n          <div className=\"text-2xl text-indigo-500 sm:text-3xl\">\n            \u00A3{showProfitLoss ? totalGainLoss?.toLocaleString(\"en-GB\") : \"shh\"}\n          </div>\n          <div className=\"text-xs text-indigo-400 uppercase\">Profit/Loss</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import {\n  CurrencyDollarIcon,\n  CurrencyEuroIcon,\n  CurrencyPoundIcon,\n  ArrowCircleDownIcon,\n  ArrowCircleUpIcon,\n  CalculatorIcon,\n  CalendarIcon,\n  BriefcaseIcon,\n} from \"@heroicons/react/solid\";\nimport Pill from \"./library/pill\";\nimport type { StockData, TotalShareItemsByCode } from \"../types/shares\";\n\ninterface Props {\n  exchangeData: TotalShareItemsByCode;\n  shareData: StockData;\n}\n\nfunction parseCountry(country: string) {\n  switch (country) {\n    case \"United States\":\n      return {\n        flag: (\n          <img\n            src=\"/_static/flags/us.png\"\n            alt={country}\n            aria-hidden=\"true\"\n            className=\"m-1 h-4 w-7 sm:m-1.5 sm:h-6 sm:w-10\"\n          />\n        ),\n        label: country,\n      };\n    case \"Germany\":\n      return {\n        flag: (\n          <img\n            src=\"/_static/flags/de.png\"\n            alt={country}\n            aria-hidden=\"true\"\n            className=\"m-1 h-4 w-7 sm:m-1.5 sm:h-6 sm:w-10\"\n          />\n        ),\n        label: \"GER\",\n      };\n    default:\n      return {\n        flag: (\n          <img\n            src=\"/_static/flags/gb.png\"\n            alt={country}\n            aria-hidden=\"true\"\n            className=\"m-1 h-4 w-7 sm:m-1.5 sm:h-6 sm:w-10\"\n          />\n        ),\n        label: \"UK\",\n      };\n  }\n}\n\nfunction showCurrencyIcon(currency: string) {\n  switch (currency) {\n    case \"USD\":\n      return (\n        <CurrencyDollarIcon\n          className=\"h-7 w-8 fill-rose-300 sm:h-9 sm:w-10\"\n          aria-hidden=\"true\"\n        />\n      );\n    case \"EUR\":\n      return (\n        <CurrencyEuroIcon\n          className=\"h-7 w-8 fill-rose-300 sm:h-9 sm:w-10\"\n          aria-hidden=\"true\"\n        />\n      );\n    default:\n      return (\n        <CurrencyPoundIcon\n          className=\"h-7 w-8 fill-rose-300 sm:h-9 sm:w-10\"\n          aria-hidden=\"true\"\n        />\n      );\n  }\n}\n\nfunction showShareValueUpOrDown(\n  currentValue: number,\n  totalShareItems: TotalShareItemsByCode\n) {\n  const highestPurchasePrice = totalShareItems.sort(\n    (a, b) => b.originalCostPrice - a.originalCostPrice\n  )[0].originalCostPrice;\n\n  return {\n    value: (currentValue - highestPurchasePrice).toFixed(2),\n    isUp: currentValue > highestPurchasePrice,\n    icon:\n      currentValue > highestPurchasePrice ? (\n        <ArrowCircleUpIcon\n          className=\"h-7 w-8 fill-teal-400 sm:h-9 sm:w-10\"\n          aria-hidden=\"true\"\n        />\n      ) : (\n        <ArrowCircleDownIcon\n          className=\"h-7 w-8 fill-rose-300 sm:h-9 sm:w-10\"\n          aria-hidden=\"true\"\n        />\n      ),\n  };\n}\n\nfunction showCalendar(fiftyTwoWeekChange: number) {\n  console.log(fiftyTwoWeekChange);\n  if (fiftyTwoWeekChange > 1) {\n    return (\n      <CalendarIcon\n        className=\"h-7 w-8 fill-teal-400 sm:h-9 sm:w-10\"\n        aria-hidden=\"true\"\n      />\n    );\n  } else {\n    return (\n      <CalendarIcon\n        className=\"h-7 w-8 fill-rose-300 sm:h-9 sm:w-10\"\n        aria-hidden=\"true\"\n      />\n    );\n  }\n}\n\nfunction pillInformation(\n  exchangeData: TotalShareItemsByCode,\n  shareData: StockData\n) {\n  const information: never[] = [];\n  const shareValueUpOrDown = showShareValueUpOrDown(\n    shareData.currentPrice,\n    exchangeData\n  );\n  const currencyConversionLabel =\n    exchangeData[0].currency === \"GBP\"\n      ? \"1\"\n      : `${exchangeData[0].exchangeRate.toFixed(2)}p / 1 ${\n          exchangeData[0].currency\n        }`;\n\n  const totalShares = exchangeData.reduce(\n    (acc, cur) => acc + Number(cur.totalShares),\n    0\n  );\n\n  const accountsAssociated: Array<string> = Array.from(\n    new Set(exchangeData.map((item: any) => item.account))\n  );\n  const account =\n    accountsAssociated.length < 2\n      ? accountsAssociated[0]\n      : accountsAssociated.join(\" & \");\n\n  return [\n    ...information,\n    {\n      label: currencyConversionLabel,\n      icon: showCurrencyIcon(exchangeData[0].currency),\n      key: 1,\n    },\n    {\n      label: parseCountry(shareData.country).label,\n      icon: parseCountry(shareData.country).flag,\n      key: 2,\n    },\n    {\n      label: shareValueUpOrDown.value,\n      icon: shareValueUpOrDown.icon,\n      key: 3,\n    },\n    {\n      label: `${totalShares} Shares`,\n      icon: (\n        <CalculatorIcon\n          className=\"h-7 w-8 fill-indigo-400 sm:h-9 sm:w-10\"\n          aria-hidden=\"true\"\n        />\n      ),\n      key: 4,\n    },\n    {\n      label: `${shareData.fiftyTwoWeekChange} / 52W`,\n      icon: showCalendar(parseFloat(shareData.fiftyTwoWeekChange)),\n      key: 5,\n    },\n    {\n      label: account,\n      icon: (\n        <BriefcaseIcon\n          className=\"h-7 w-8 fill-indigo-400 sm:h-9 sm:w-10\"\n          aria-hidden=\"true\"\n        />\n      ),\n      key: 6,\n    },\n  ];\n}\n\nexport default function InformationBar(prop: Props) {\n  const items = pillInformation(prop.exchangeData, prop.shareData);\n\n  return (\n    <div className=\"grid grid-cols-3 gap-4 p-4 sm:gap-8 lg:grid-cols-6\">\n      {items?.map(({ label, key, icon }) => (\n        <div key={key}>\n          <Pill data={label} icon={icon} />\n        </div>\n      ))}\n    </div>\n  );\n}\n", "interface Props {\n  data: number | string;\n  icon: JSX.Element;\n}\n\nexport default function Pill(props: Props): JSX.Element {\n  const { data, icon } = props;\n\n  return (\n    <div\n      className={`h-8 rounded-lg border-2 border-indigo-200 bg-[url('/_static/crosspattern2.svg')] sm:h-10`}\n    >\n      <span className={`inline-block rounded-lg align-middle text-white`}>\n        {icon}\n      </span>\n      <span\n        className={`ml-2 inline-block text-right align-middle text-xs uppercase text-rose-400 sm:ml-4 sm:text-sm`}\n      >\n        {data}\n      </span>\n    </div>\n  );\n}\n", "import ShareNav from \"./shareNav\";\nimport Chart from \"./chart\";\nimport Table from \"./table\";\nimport { formatDateForDisplay } from \"../utils/date\";\nimport type {\n  StockDataByPeriodItems,\n  TotalShareItemsByCode,\n} from \"../types/shares\";\n\ninterface Props {\n  shareCode: string;\n  displayData: string;\n  handleStockPeriod: (period: string) => void;\n  handleDisplayMode: (mode: string) => void;\n  period: string;\n  start: string;\n  end: string;\n  shareDataByPeriod: StockDataByPeriodItems;\n  totalSharesByCode: TotalShareItemsByCode;\n}\n\nexport default function ShareGraph(props: Props) {\n  return (\n    <div className=\"px-4\">\n      <ShareNav\n        shareCode={props.shareCode as string}\n        displayData={props.displayData}\n        handleStockPeriod={props.handleStockPeriod}\n        handleDisplayMode={props.handleDisplayMode}\n        period={props.period}\n        start={props.start}\n        end={props.end}\n      />\n      <div className=\"px-4 pt-2 text-slate-600\">\n        <span className=\"text-xs rounded-lg\">Selected period: </span>\n        <span className=\"text-sm rounded-lg text-rose-600\">\n          {formatDateForDisplay(props.start)} -{\" \"}\n          {formatDateForDisplay(props.end)}\n        </span>\n      </div>\n      {props.displayData === \"table\" ? (\n        <Table data={props.shareDataByPeriod} />\n      ) : (\n        <Chart\n          shareData={props.shareDataByPeriod}\n          shareCode={props.shareCode as string}\n          originalData={props.totalSharesByCode}\n        />\n      )}\n    </div>\n  );\n}\n", "import { ChartBarIcon, TableIcon } from \"@heroicons/react/outline\";\nimport { Form } from \"@remix-run/react\";\n\ninterface Props {\n  shareCode: string;\n  displayData: string;\n  period: string;\n  start: string;\n  end: string;\n  handleStockPeriod: (period: string) => void;\n  handleDisplayMode: (mode: string) => void;\n}\n\nexport default function ShareNav(prop: Props) {\n  const {\n    shareCode,\n    displayData,\n    handleStockPeriod,\n    handleDisplayMode,\n    period,\n    start,\n    end,\n  } = prop;\n\n  function isActive(buttonVal: string) {\n    return period === buttonVal;\n  }\n\n  return (\n    <div className=\"rounded-lg border\">\n      <Form method=\"post\">\n        <div className=\"flex h-12 items-center rounded-lg bg-gray-200 px-4\">\n          <ul className=\"flex items-center\">\n            <li className=\"mr-4\">\n              <button\n                type=\"submit\"\n                className={`items-center rounded border border-rose-500 bg-rose-300 px-2 py-2 text-xs font-bold text-white hover:border-rose-300 hover:bg-rose-500 sm:px-3 sm:py-2.5 sm:text-sm  ${\n                  isActive(\"1W\") ? \"border border-rose-300 bg-rose-500\" : \"\"\n                }`}\n                onClick={() => handleStockPeriod(\"1W\")}\n                name=\"1W\"\n              >\n                1W\n              </button>\n            </li>\n            <li className=\"mr-4\">\n              <button\n                type=\"submit\"\n                className={`items-center rounded border border-rose-500 bg-rose-300 px-2 py-2 text-xs font-bold text-white hover:border-rose-300 hover:bg-rose-500 sm:px-3 sm:py-2.5 sm:text-sm ${\n                  isActive(\"1M\") ? \"bg-rose-500\" : \"\"\n                }`}\n                onClick={() => handleStockPeriod(\"1M\")}\n                name=\"1M\"\n              >\n                1M\n              </button>\n            </li>\n            <li className=\"mr-4\">\n              <button\n                type=\"submit\"\n                className={`items-center rounded border border-rose-500 bg-rose-300 px-2 py-2 text-xs font-bold text-white hover:border-rose-300 hover:bg-rose-500 sm:px-3 sm:py-2.5 sm:text-sm ${\n                  isActive(\"3M\") ? \"bg-rose-500\" : \"\"\n                }`}\n                onClick={() => handleStockPeriod(\"3M\")}\n                name=\"3M\"\n              >\n                3M\n              </button>\n            </li>\n            <li className=\"mr-4\">\n              <button\n                type=\"submit\"\n                className={`mr-4 items-center rounded border border-rose-500 bg-rose-300 px-2 py-2 text-xs font-bold text-white hover:border-rose-300 hover:bg-rose-500 sm:px-3 sm:py-2.5 sm:text-sm ${\n                  isActive(\"1Y\") ? \"bg-rose-500\" : \"\"\n                }`}\n                onClick={() => handleStockPeriod(\"1Y\")}\n                name=\"1Y\"\n              >\n                1Y\n              </button>\n            </li>\n            <input\n              type=\"text\"\n              name=\"share_code\"\n              value={shareCode}\n              hidden\n              readOnly\n            ></input>\n            <input\n              type=\"text\"\n              name=\"start_date\"\n              value={start}\n              hidden\n              readOnly\n            ></input>\n            <input\n              type=\"text\"\n              name=\"end_date\"\n              value={end}\n              hidden\n              readOnly\n            ></input>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              strokeWidth={1.5}\n              stroke=\"gray\"\n              className=\"h-6 w-6\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                d=\"M12 6.75a.75.75 0 110-1.5.75.75 0 010 1.5zM12 12.75a.75.75 0 110-1.5.75.75 0 010 1.5zM12 18.75a.75.75 0 110-1.5.75.75 0 010 1.5z\"\n              />\n            </svg>\n\n            <li className=\"ml-4 justify-end\">\n              {displayData === \"chart\" ? (\n                <button\n                  type=\"button\"\n                  className=\"h-9 w-9 items-center justify-center text-indigo-300 hover:text-indigo-500\"\n                  onClick={() => handleDisplayMode(\"table\")}\n                >\n                  <ChartBarIcon\n                    className=\"h-6 w-6 sm:h-8 sm:w-8\"\n                    aria-hidden=\"true\"\n                  />\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  className=\"h-9 w-9 items-center text-indigo-300 hover:text-indigo-500\"\n                  onClick={() => handleDisplayMode(\"chart\")}\n                >\n                  <TableIcon className=\"h-8 w-8\" aria-hidden=\"true\" />\n                </button>\n              )}\n            </li>\n          </ul>\n        </div>\n      </Form>\n    </div>\n  );\n}\n", "import React from 'react';\nimport type { StockDataByPeriodItems, TotalShareItemsByCode } from \"../types/shares\";\nimport { formatDateForDisplay } from '../utils/date';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\ninterface Props {\n  shareCode: string;\n  shareData: StockDataByPeriodItems;\n  originalData: TotalShareItemsByCode;\n}\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n);\n\nexport default function Chart(prop: Props) {\n  const { shareCode, shareData, originalData } = prop;\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'bottom' as const,\n      },\n      title: {\n        display: true,\n        text: `${shareCode} shares`,\n        color: 'rgb(129, 140, 248)'\n      },\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Period',\n          color: 'rgb(251, 113, 133)'\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Share Price',\n          color: 'rgb(251, 113, 133)'\n        }\n      }\n    }\n  };\n\n  const labels = shareData.map(({ Date }) => formatDateForDisplay(Date))\n\n  const openingPrices = [\n    {\n      label: 'Opening price',\n      data: shareData.map(({ Open }) => Open),\n      borderColor: 'rgb(251, 113, 133)',\n      backgroundColor: 'rgba(254, 205, 211, 0.5)',\n      tension: 0.4,\n      fill: true\n    }\n  ];\n\n  const purchaseHistoryLines = originalData.map(({ originalCostPrice, totalShares, purchaseDate }) => ({\n      label: `${totalShares} bought on ${purchaseDate}`,\n      data: shareData.map(() => originalCostPrice),\n      borderColor: 'rgb(99, 102, 241)',\n      backgroundColor: 'rgba(199, 210, 254, 0.5)',\n      pointRadius: 0\n  }));\n\n  // @ts-ignore\n  const datasets = openingPrices.concat(purchaseHistoryLines);\n\n  const data = {\n    labels,\n    datasets,\n  };\n\n  return <div className=\"p-4 w-200 h-80\"><Line options={options} data={data} /></div>;\n}\n", "\nimport type { StockDataByPeriodItem, StockDataByPeriodItems } from \"../types/shares\";\nimport { formatDateForDisplay } from '../utils/date';\n\ninterface Props {\n  data: StockDataByPeriodItems;\n}\n\nexport default function TableData(prop: Props) {\n  const { data } = prop;\n  const rowData = data.map((shareRecord: StockDataByPeriodItem) => {\n    return (\n      <tr key={`${shareRecord.Date}`}>\n        <td className=\"px-6 py-4 text-sm whitespace-no-wrap border-b border-gray-200 text-cyan-800\">{formatDateForDisplay(shareRecord.Date)}</td>\n        <td className=\"px-6 py-4 text-sm whitespace-no-wrap border-b border-gray-200 text-cyan-800\">{shareRecord.Open.toFixed(3)}</td>\n        <td className=\"px-6 py-4 text-sm whitespace-no-wrap border-b border-gray-200 text-cyan-800\">{shareRecord.Close.toFixed(3)}</td>\n        <td className=\"px-6 py-4 text-sm whitespace-no-wrap border-b border-gray-200 text-cyan-800\">{shareRecord.gainLossValue}</td>\n        <td className=\"px-6 py-4 text-sm whitespace-no-wrap border-b border-gray-200 text-cyan-800\">{shareRecord.gainLossPercentage.toFixed(1)}%</td>\n        <td className=\"hidden px-6 py-4 text-sm whitespace-no-wrap border-b border-gray-200 text-cyan-800 md:table-cell\">{shareRecord.High.toFixed(3)}</td>\n        <td className=\"hidden px-6 py-4 text-sm whitespace-no-wrap border-b border-gray-200 text-cyan-800 md:table-cell\">{shareRecord.Low.toFixed(3)}</td>\n      </tr>\n    );\n  });\n  return (\n    <div className=\"flex flex-col p-4\">\n      <div className=\"py-2 -my-2 overflow-x-auto sm:-mx-6 sm:px-6 lg:-mx-8 lg:px-8\">\n        <div className=\"inline-block min-w-full overflow-hidden align-middle border-b border-gray-200 shadow sm:rounded-lg\">\n            <table className=\"min-w-full\">\n                <thead>\n                    <tr className=\"text-xs font-medium leading-4 tracking-wider text-left text-gray-400 uppercase bg-indigo-100 border-b border-blue-400\">\n                        <th\n                            className=\"px-6 py-3 \">\n                            Date</th>\n                        <th\n                            className=\"px-6 py-3 \">\n                            Open</th>\n                        <th\n                            className=\"px-6 py-3 \">\n                            Close</th>\n                        <th\n                            className=\"px-6 py-3 \">\n                            Daily Change (Value)</th>\n                        <th\n                            className=\"px-6 py-3 \">\n                            Daily Change (%)</th>\n                        <th\n                            className=\"hidden px-6 py-3 md:table-cell\">\n                            High</th>\n                        <th\n                            className=\"hidden px-6 py-3 md:table-cell\">\n                            Low</th>\n                    </tr>\n                </thead>\n\n                <tbody className=\"bg-white\">\n                    {rowData}\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n  );\n}", "import { Link } from \"@remix-run/react\";\n\nexport default function SharesIndexPage() {\n  return (\n    <p>\n      No share selected. Select a share\n      <Link to=\"new\" className=\"text-blue-500 underline\">\n        Do Something else\n      </Link>\n    </p>\n  );\n}\n", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\n\nimport { logout } from \"~/session.server\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  return logout(request);\n};\n\nexport const loader: LoaderFunction = async () => {\n  return redirect(\"/\");\n};\n", "import type { LoaderFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Link } from \"@remix-run/react\";\nimport { getUserId } from \"~/session.server\";\n\nconst shares = [\n  { name: \"VOW.DE\", href: \"/shares/VOW3.DE\" },\n  { name: \"NFLX\", href: \"/shares/NFLX\" },\n  { name: \"BP.L\", href: \"/shares/BP.L\" },\n  { name: \"TSLA\", href: \"/shares/TSLA\" },\n  { name: \"SPCE\", href: \"/shares/SPCE\" },\n  { name: \"ROO.L\", href: \"/shares/ROO.L\" },\n  { name: \"ENR\", href: \"/shares/ENR\" },\n  { name: \"BABA\", href: \"/shares/BABA\" },\n];\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await getUserId(request);\n  // If no user detected, redirect to login page\n  if (!userId) return redirect(\"/login\");\n  return json({});\n};\n\nexport default function Index() {\n  return (\n    <main className=\"z-10 antialiased\">\n      <div className=\"flex h-96 flex-wrap bg-[url('/_static/ubud-capella.jpg')] bg-cover p-8 opacity-80\">\n        <div className=\"content-center items-center self-center text-left font-oswald text-3xl sm:text-3xl md:text-4xl lg:text-5xl\">\n          <div className=\"p-2 opacity-80\">\n            <h1 className=\"text-indigo-200\">\n              Every great dream begins with a{\" \"}\n              <span className=\"text-4xl text-rose-100 sm:text-5xl lg:text-6xl\">\n                dreamer\n              </span>\n              .\n            </h1>\n          </div>\n        </div>\n      </div>\n      <div className=\"flex h-auto flex-row flex-wrap justify-around bg-rose-100 bg-[url('/_static/crosspattern2.svg')] pb-4 sm:h-80\">\n        <div className=\"flex content-center items-center self-center\">\n          <img\n            className=\"mx-auto block w-48 content-center items-center self-center sm:w-64\"\n            src=\"/_static/bahati_logo.png\"\n            alt=\"Bahati\"\n          />\n        </div>\n        <div\n          className=\"mt-4 grid grid-cols-2 gap-x-12 gap-y-8 p-4 md:grid-cols-3 md:gap-8 md:p-12 lg:p-8\"\n          data-cy=\"share-links\"\n        >\n          {shares.map((item) => (\n            <Link\n              className=\"h-10 w-32 rounded-md border border-rose-300 bg-rose-300 bg-gradient-to-r from-rose-400 to-rose-200 py-2 text-center text-white drop-shadow-md hover:border-indigo-300 hover:from-indigo-200 hover:to-indigo-400\"\n              to={{\n                pathname: item.href,\n              }}\n              key={item.name}\n            >\n              {item.name}\n            </Link>\n          ))}\n        </div>\n      </div>\n    </main>\n  );\n}\n", "import type {\n  ActionFunction,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useActionData, useSearchParams } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nimport { createUserSession, getUserId } from \"~/session.server\";\nimport { verifyLogin } from \"~/models/user.server\";\nimport { safeRedirect, validateUsername } from \"~/utils\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await getUserId(request);\n  if (userId) return redirect(\"/\");\n  return json({});\n};\n\ninterface ActionData {\n  errors?: {\n    username?: string;\n    password?: string;\n  };\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const username = formData.get(\"username\");\n  const password = formData.get(\"password\");\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"));\n  const remember = formData.get(\"remember\");\n\n  if (!validateUsername(username)) {\n    return json<ActionData>(\n      { errors: { username: \"Username is invalid\" } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof password !== \"string\" || password.length === 0) {\n    return json<ActionData>(\n      { errors: { password: \"Password is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (password.length < 8) {\n    return json<ActionData>(\n      { errors: { password: \"Password is too short\" } },\n      { status: 400 }\n    );\n  }\n\n  const user = await verifyLogin(username, password);\n\n  if (!user) {\n    return json<ActionData>(\n      { errors: { username: \"Invalid username or password\" } },\n      { status: 400 }\n    );\n  }\n\n  return createUserSession({\n    request,\n    userId: user.id,\n    remember: remember === \"on\" ? true : false,\n    redirectTo,\n  });\n};\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"Login\",\n  };\n};\n\nexport default function LoginPage() {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") || \"/\";\n  const actionData = useActionData() as ActionData;\n  const usernameRef = React.useRef<HTMLInputElement>(null);\n  const passwordRef = React.useRef<HTMLInputElement>(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.username) {\n      usernameRef.current?.focus();\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <div className=\"flex flex-col justify-center min-h-full\">\n      <div className=\"w-full max-w-md px-8 mx-auto\">\n        <Form method=\"post\" className=\"space-y-6\" noValidate>\n          <div>\n            <label\n              htmlFor=\"username\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Username\n            </label>\n            <div className=\"mt-1\">\n              <input\n                ref={usernameRef}\n                id=\"username\"\n                required\n                autoFocus={true}\n                name=\"username\"\n                type=\"username\"\n                autoComplete=\"username\"\n                aria-invalid={actionData?.errors?.username ? true : undefined}\n                aria-describedby=\"username-error\"\n                className=\"w-full px-2 py-1 text-lg border border-gray-500 rounded\"\n              />\n              {actionData?.errors?.username && (\n                <div className=\"pt-1 text-red-700\" id=\"username-error\">\n                  {actionData.errors.username}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div>\n            <label\n              htmlFor=\"password\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Password\n            </label>\n            <div className=\"mt-1\">\n              <input\n                id=\"password\"\n                ref={passwordRef}\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                aria-invalid={actionData?.errors?.password ? true : undefined}\n                aria-describedby=\"password-error\"\n                className=\"w-full px-2 py-1 text-lg border border-gray-500 rounded\"\n              />\n              {actionData?.errors?.password && (\n                <div className=\"pt-1 text-red-700\" id=\"password-error\">\n                  {actionData.errors.password}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n          <button\n            type=\"submit\"\n            className=\"w-full px-4 py-2 text-white bg-indigo-500 rounded hover:bg-indigo-600 focus:bg-indigo-400\"\n          >\n            Log in\n          </button>\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center\">\n              <input\n                id=\"remember\"\n                name=\"remember\"\n                type=\"checkbox\"\n                className=\"w-4 h-4 text-indigo-600 border-gray-300 rounded focus:ring-indigo-500\"\n              />\n              <label\n                htmlFor=\"remember\"\n                className=\"block ml-2 text-sm text-gray-900\"\n              >\n                Remember me\n              </label>\n            </div>\n            <div className=\"text-sm text-center text-gray-500\">\n             Contact the admin\n            </div>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "import { useMatches } from \"@remix-run/react\";\nimport { useMemo } from \"react\";\n\nimport type { User } from \"~/models/user.server\";\n\nconst DEFAULT_REDIRECT = \"/\";\n\n/**\n * This should be used any time the redirect path is user-provided\n * (Like the query string on our login/signup pages). This avoids\n * open-redirect vulnerabilities.\n * @param {string} to The redirect destination\n * @param {string} defaultRedirect The redirect to use if the to is unsafe.\n */\nexport function safeRedirect(\n  to: FormDataEntryValue | string | null | undefined,\n  defaultRedirect: string = DEFAULT_REDIRECT\n) {\n  if (!to || typeof to !== \"string\") {\n    return defaultRedirect;\n  }\n\n  if (!to.startsWith(\"/\") || to.startsWith(\"//\")) {\n    return defaultRedirect;\n  }\n\n  return to;\n}\n\n/**\n * This base hook is used in other hooks to quickly search for specific data\n * across all loader data using useMatches.\n * @param {string} id The route id\n * @returns {JSON|undefined} The router data or undefined if not found\n */\nexport function useMatchesData(\n  id: string\n): Record<string, unknown> | undefined {\n  const matchingRoutes = useMatches();\n  const route = useMemo(\n    () => matchingRoutes.find((route) => route.id === id),\n    [matchingRoutes, id]\n  );\n  return route?.data;\n}\n\nfunction isUser(user: any): user is User {\n  return user && typeof user === \"object\" && typeof user.email === \"string\";\n}\n\nexport function useOptionalUser(): User | undefined {\n  const data = useMatchesData(\"root\");\n  if (!data || !isUser(data.user)) {\n    return undefined;\n  }\n  return data.user;\n}\n\nexport function useUser(): User {\n  const maybeUser = useOptionalUser();\n  if (!maybeUser) {\n    throw new Error(\n      \"No user found in root loader, but user is required by useUser. If user is optional, try useOptionalUser instead.\"\n    );\n  }\n  return maybeUser;\n}\n\nexport function validateUsername(username: unknown): username is string {\n  return typeof username === \"string\" && username.length > 3;\n}\n", "import type { LoaderFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { Form, Link, NavLink, Outlet, useLoaderData } from \"@remix-run/react\";\n\nimport { requireUserId } from \"~/session.server\";\nimport { useUser } from \"~/utils\";\nimport { getNoteListItems } from \"~/models/note.server\";\n\ntype LoaderData = {\n  noteListItems: Awaited<ReturnType<typeof getNoteListItems>>;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await requireUserId(request);\n  const noteListItems = await getNoteListItems({ userId });\n  return json<LoaderData>({ noteListItems });\n};\n\nexport default function NotesPage() {\n  const data = useLoaderData() as LoaderData;\n  const user = useUser();\n\n  return (\n    <div className=\"flex flex-col h-full min-h-screen\">\n      <header className=\"flex items-center justify-between p-4 text-white bg-slate-800\">\n        <h1 className=\"text-3xl font-bold\">\n          <Link to=\".\">Notes</Link>\n        </h1>\n        <p>{user.username}</p>\n        <Form action=\"/logout\" method=\"post\">\n          <button\n            type=\"submit\"\n            className=\"px-4 py-2 text-blue-100 rounded bg-slate-600 hover:bg-blue-500 active:bg-blue-600\"\n          >\n            Logout\n          </button>\n        </Form>\n      </header>\n\n      <main className=\"flex h-full bg-white\">\n        <div className=\"h-full border-r w-80 bg-gray-50\">\n          <Link to=\"new\" className=\"block p-4 text-xl text-blue-500\">\n            + New Note\n          </Link>\n\n          <hr />\n\n          {data.noteListItems.length === 0 ? (\n            <p className=\"p-4\">No notes yet</p>\n          ) : (\n            <ol>\n              {data.noteListItems.map((note) => (\n                <li key={note.id}>\n                  <NavLink\n                    className={({ isActive }) =>\n                      `block border-b p-4 text-xl ${isActive ? \"bg-white\" : \"\"}`\n                    }\n                    to={note.id}\n                  >\n                    \uD83D\uDCDD {note.title}\n                  </NavLink>\n                </li>\n              ))}\n            </ol>\n          )}\n        </div>\n\n        <div className=\"flex-1 p-6\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n}\n", "import arc from \"@architect/functions\";\nimport cuid from \"cuid\";\n\nimport type { User } from \"./user.server\";\n\nexport type Note = {\n  id: ReturnType<typeof cuid>;\n  userId: User[\"id\"];\n  title: string;\n  body: string;\n};\n\ntype NoteItem = {\n  pk: User[\"id\"];\n  sk: `note#${Note[\"id\"]}`;\n};\n\nconst skToId = (sk: NoteItem[\"sk\"]): Note[\"id\"] => sk.replace(/^note#/, \"\");\nconst idToSk = (id: Note[\"id\"]): NoteItem[\"sk\"] => `note#${id}`;\n\nexport async function getNote({\n  id,\n  userId,\n}: Pick<Note, \"id\" | \"userId\">): Promise<Note | null> {\n  const db = await arc.tables();\n\n  const result = await db.note.get({ pk: userId, sk: idToSk(id) });\n\n  if (result) {\n    return {\n      userId: result.pk,\n      id: result.sk,\n      title: result.title,\n      body: result.body,\n    };\n  }\n  return null;\n}\n\nexport async function getNoteListItems({\n  userId,\n}: Pick<Note, \"userId\">): Promise<Array<Pick<Note, \"id\" | \"title\">>> {\n  const db = await arc.tables();\n\n  const result = await db.note.query({\n    KeyConditionExpression: \"pk = :pk\",\n    ExpressionAttributeValues: { \":pk\": userId },\n  });\n\n  return result.Items.map((n: any) => ({\n    title: n.title,\n    id: skToId(n.sk),\n  }));\n}\n\nexport async function createNote({\n  body,\n  title,\n  userId,\n}: Pick<Note, \"body\" | \"title\" | \"userId\">): Promise<Note> {\n  const db = await arc.tables();\n\n  const result = await db.note.put({\n    pk: userId,\n    sk: idToSk(cuid()),\n    title: title,\n    body: body,\n  });\n  return {\n    id: skToId(result.sk),\n    userId: result.pk,\n    title: result.title,\n    body: result.body,\n  };\n}\n\nexport async function deleteNote({ id, userId }: Pick<Note, \"id\" | \"userId\">) {\n  const db = await arc.tables();\n  return db.note.delete({ pk: userId, sk: idToSk(id) });\n}\n", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useCatch, useLoaderData } from \"@remix-run/react\";\nimport invariant from \"tiny-invariant\";\n\nimport { deleteNote } from \"~/models/note.server\";\nimport { getNote } from \"~/models/note.server\";\nimport { requireUserId } from \"~/session.server\";\n\ntype LoaderData = {\n  note: NonNullable<Awaited<ReturnType<typeof getNote>>>;\n};\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const userId = await requireUserId(request);\n  invariant(params.noteId, \"noteId not found\");\n\n  const note = await getNote({ userId, id: params.noteId });\n  if (!note) {\n    throw new Response(\"Not Found\", { status: 404 });\n  }\n  return json<LoaderData>({ note });\n};\n\nexport const action: ActionFunction = async ({ request, params }) => {\n  const userId = await requireUserId(request);\n  invariant(params.noteId, \"noteId not found\");\n\n  await deleteNote({ userId, id: params.noteId });\n\n  return redirect(\"/notes\");\n};\n\nexport default function NoteDetailsPage() {\n  const data = useLoaderData() as LoaderData;\n\n  return (\n    <div>\n      <h3 className=\"text-2xl font-bold\">{data.note.title}</h3>\n      <p className=\"py-6\">{data.note.body}</p>\n      <hr className=\"my-4\" />\n      <Form method=\"post\">\n        <button\n          type=\"submit\"\n          className=\"rounded bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\n        >\n          Delete\n        </button>\n      </Form>\n    </div>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n\n  return <div>An unexpected error occurred: {error.message}</div>;\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  if (caught.status === 404) {\n    return <div>Note not found</div>;\n  }\n\n  throw new Error(`Unexpected caught response with status: ${caught.status}`);\n}\n", "import { Link } from \"@remix-run/react\";\n\nexport default function NoteIndexPage() {\n  return (\n    <p>\n      No note selected. Select a note on the left, or{\" \"}\n      <Link to=\"new\" className=\"text-blue-500 underline\">\n        create a new note.\n      </Link>\n    </p>\n  );\n}\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useActionData } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nimport { createNote } from \"~/models/note.server\";\nimport { requireUserId } from \"~/session.server\";\n\ntype ActionData = {\n  errors?: {\n    title?: string;\n    body?: string;\n  };\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const userId = await requireUserId(request);\n\n  const formData = await request.formData();\n  const title = formData.get(\"title\");\n  const body = formData.get(\"body\");\n\n  if (typeof title !== \"string\" || title.length === 0) {\n    return json<ActionData>(\n      { errors: { title: \"Title is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof body !== \"string\" || body.length === 0) {\n    return json<ActionData>(\n      { errors: { body: \"Body is required\" } },\n      { status: 400 }\n    );\n  }\n\n  const note = await createNote({ title, body, userId });\n\n  return redirect(`/notes/${note.id}`);\n};\n\nexport default function NewNotePage() {\n  const actionData = useActionData() as ActionData;\n  const titleRef = React.useRef<HTMLInputElement>(null);\n  const bodyRef = React.useRef<HTMLTextAreaElement>(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.title) {\n      titleRef.current?.focus();\n    } else if (actionData?.errors?.body) {\n      bodyRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <Form\n      method=\"post\"\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: 8,\n        width: \"100%\",\n      }}\n    >\n      <div>\n        <label className=\"flex w-full flex-col gap-1\">\n          <span>Title: </span>\n          <input\n            ref={titleRef}\n            name=\"title\"\n            className=\"flex-1 rounded-md border-2 border-blue-500 px-3 text-lg leading-loose\"\n            aria-invalid={actionData?.errors?.title ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.title ? \"title-error\" : undefined\n            }\n          />\n        </label>\n        {actionData?.errors?.title && (\n          <div className=\"pt-1 text-red-700\" id=\"title-error\">\n            {actionData.errors.title}\n          </div>\n        )}\n      </div>\n\n      <div>\n        <label className=\"flex w-full flex-col gap-1\">\n          <span>Body: </span>\n          <textarea\n            ref={bodyRef}\n            name=\"body\"\n            rows={8}\n            className=\"w-full flex-1 rounded-md border-2 border-blue-500 py-2 px-3 text-lg leading-6\"\n            aria-invalid={actionData?.errors?.body ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.body ? \"body-error\" : undefined\n            }\n          />\n        </label>\n        {actionData?.errors?.body && (\n          <div className=\"pt-1 text-red-700\" id=\"body-error\">\n            {actionData.errors.body}\n          </div>\n        )}\n      </div>\n\n      <div className=\"text-right\">\n        <button\n          type=\"submit\"\n          className=\"rounded bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\n        >\n          Save\n        </button>\n      </div>\n    </Form>\n  );\n}\n", "import type {\n  ActionFunction,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nimport { getUserId, createUserSession } from \"~/session.server\";\n\nimport { createUser, getUserByUsername } from \"~/models/user.server\";\nimport { safeRedirect, validateUsername } from \"~/utils\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await getUserId(request);\n  if (userId) return redirect(\"/\");\n  return json({});\n};\n\ninterface ActionData {\n  errors: {\n    username?: string;\n    password?: string;\n  };\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const username = formData.get(\"username\");\n  const password = formData.get(\"password\");\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"), \"/\");\n\n  if (!validateUsername(username)) {\n    return json<ActionData>(\n      { errors: { username: \"Username is invalid\" } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof password !== \"string\" || password.length === 0) {\n    return json<ActionData>(\n      { errors: { password: \"Password is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (password.length < 8) {\n    return json<ActionData>(\n      { errors: { password: \"Password is too short\" } },\n      { status: 400 }\n    );\n  }\n\n  const existingUser = await getUserByUsername(username);\n  if (existingUser) {\n    return json<ActionData>(\n      { errors: { username: \"A user already exists with this username\" } },\n      { status: 400 }\n    );\n  }\n\n  const user = await createUser(username, password);\n\n  return createUserSession({\n    request,\n    userId: user.id,\n    remember: false,\n    redirectTo,\n  });\n};\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"Sign Up\",\n  };\n};\n\nexport default function Join() {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") ?? undefined;\n  const actionData = useActionData() as ActionData;\n  const usernameRef = React.useRef<HTMLInputElement>(null);\n  const passwordRef = React.useRef<HTMLInputElement>(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.username) {\n      usernameRef.current?.focus();\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <div className=\"flex flex-col justify-center min-h-full\">\n      <div className=\"w-full max-w-md px-8 mx-auto\">\n        <Form method=\"post\" className=\"space-y-6\" noValidate>\n          <div>\n            <label\n              htmlFor=\"username\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Username\n            </label>\n            <div className=\"mt-1\">\n              <input\n                ref={usernameRef}\n                id=\"username\"\n                required\n                autoFocus={true}\n                name=\"username\"\n                type=\"username\"\n                autoComplete=\"username\"\n                aria-invalid={actionData?.errors?.username ? true : undefined}\n                aria-describedby=\"username-error\"\n                className=\"w-full px-2 py-1 text-lg border border-gray-500 rounded\"\n              />\n              {actionData?.errors?.username && (\n                <div className=\"pt-1 text-red-700\" id=\"username-error\">\n                  {actionData.errors.username}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div>\n            <label\n              htmlFor=\"password\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Password\n            </label>\n            <div className=\"mt-1\">\n              <input\n                id=\"password\"\n                ref={passwordRef}\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"new-password\"\n                aria-invalid={actionData?.errors?.password ? true : undefined}\n                aria-describedby=\"password-error\"\n                className=\"w-full px-2 py-1 text-lg border border-gray-500 rounded\"\n              />\n              {actionData?.errors?.password && (\n                <div className=\"pt-1 text-red-700\" id=\"password-error\">\n                  {actionData.errors.password}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n          <button\n            type=\"submit\"\n            className=\"w-full px-4 py-2 text-white bg-blue-500 rounded hover:bg-blue-600 focus:bg-blue-400\"\n          >\n            Create Account\n          </button>\n          <div className=\"flex items-center justify-center\">\n            <div className=\"text-sm text-center text-gray-500\">\n              Already have an account?{\" \"}\n              <Link\n                className=\"text-blue-500 underline\"\n                to={{\n                  pathname: \"/login\",\n                  search: searchParams.toString(),\n                }}\n              >\n                Log in\n              </Link>\n            </div>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\n\nimport { createUser } from \"~/models/user.server\";\nimport { createUserSession } from \"~/session.server\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  if (process.env.NODE_ENV === \"production\") {\n    console.error(\n      \"\uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 test routes should not be enabled in production \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8\"\n    );\n    // test routes should not be enabled in production or without\n    // enable test routes... Just in case this somehow slips through\n    // we'll redirect :)\n    return redirect(\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\");\n  }\n\n  const { email } = await request.json();\n  if (!email) {\n    throw new Error(\"email required for login\");\n  }\n  if (!email.endsWith(\"@example.com\")) {\n    throw new Error(\"All test emails must end in @example.com\");\n  }\n\n  const user = await createUser(email, \"myreallystrongpassword\");\n\n  return createUserSession({\n    request,\n    userId: user.id,\n    remember: true,\n    redirectTo: \"/\",\n  });\n};\n\nexport default null;\n", "export default {'version':'17c3f8ac','entry':{'module':'/_static/build/entry.client-TA5NS2NU.js','imports':['/_static/build/_shared/chunk-D2FZPMIS.js','/_static/build/_shared/chunk-NTN7YPXJ.js']},'routes':{'../cypress/support/test-routes/create-user':{'id':'../cypress/support/test-routes/create-user','parentId':'root','path':'__tests/create-user','index':undefined,'caseSensitive':undefined,'module':'/_static/build/_.._/cypress/support/test-routes/create-user-PKFUPL36.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/_static/build/root-DU4Z7WDQ.js','imports':['/_static/build/_shared/chunk-WMWSNRKS.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/_static/build/routes/index-JCI7XXVY.js','imports':['/_static/build/_shared/chunk-XMI3USBO.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/join':{'id':'routes/join','parentId':'root','path':'join','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/join-EIJFNU5A.js','imports':['/_static/build/_shared/chunk-BSRRWFSI.js','/_static/build/_shared/chunk-VXHN4BJH.js','/_static/build/_shared/chunk-XMI3USBO.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/login-4TMS65CG.js','imports':['/_static/build/_shared/chunk-BSRRWFSI.js','/_static/build/_shared/chunk-VXHN4BJH.js','/_static/build/_shared/chunk-XMI3USBO.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/logout-BLEMLIX5.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes':{'id':'routes/notes','parentId':'root','path':'notes','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/notes-YMTPLTYF.js','imports':['/_static/build/_shared/chunk-ATZBVMZP.js','/_static/build/_shared/chunk-VXHN4BJH.js','/_static/build/_shared/chunk-XMI3USBO.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes/$noteId':{'id':'routes/notes/$noteId','parentId':'routes/notes','path':':noteId','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/notes/$noteId-I6ZGU2IO.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/notes/index':{'id':'routes/notes/index','parentId':'routes/notes','path':undefined,'index':true,'caseSensitive':undefined,'module':'/_static/build/routes/notes/index-K4SENMN5.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes/new':{'id':'routes/notes/new','parentId':'routes/notes','path':'new','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/notes/new-VAMJLZUA.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/shares/$shareCode':{'id':'routes/shares/$shareCode','parentId':'root','path':'shares/:shareCode','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/shares/$shareCode-VK3GO2RS.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/shares/index':{'id':'routes/shares/index','parentId':'root','path':'shares','index':true,'caseSensitive':undefined,'module':'/_static/build/routes/shares/index-7CS4HXEV.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/shares/query-exchange-rate':{'id':'routes/shares/query-exchange-rate','parentId':'root','path':'shares/query-exchange-rate','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/shares/query-exchange-rate-P3U5JKQQ.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/shares/query-share-data':{'id':'routes/shares/query-share-data','parentId':'root','path':'shares/query-share-data','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/shares/query-share-data-CDVXR7PS.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/_static/build/manifest-17C3F8AC.js'};"],
  "mappings": "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",
  "names": []
}
