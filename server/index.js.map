{
  "version": 3,
  "sources": ["../node_modules/@remix-run/dev/dist/compiler/shims/react.ts", "../mocks/index.js", "../server.ts", "server-entry-module:@remix-run/dev/server-build", "../app/entry.server.tsx", "../app/root.tsx", "../app/navbar.tsx", "../app/footer.tsx", "../app/routes/shares/query-share-data.ts", "../app/models/shares.server.ts", "../app/utils/shares.ts", "../app/mocks/mockShareData.ts", "../app/mocks/mockShareDataByPeriod.ts", "../app/routes/shares/$shareCode.tsx", "../app/utils/date.ts", "../app/components/chart.tsx", "../app/components/table.tsx", "../app/components/currentDayShareHeader.tsx", "../app/components/shareNav.tsx", "../app/components/shareValueCards.tsx", "../app/routes/shares/index.tsx", "../app/routes/logout.tsx", "../app/session.server.ts", "../app/models/user.server.ts", "../app/routes/index.tsx", "../app/utils.ts", "../app/routes/login.tsx", "../app/routes/notes.tsx", "../app/models/note.server.ts", "../app/routes/notes/$noteId.tsx", "../app/routes/notes/index.tsx", "../app/routes/notes/new.tsx", "../app/routes/join.tsx", "../cypress/support/test-routes/create-user.ts", "server-assets-manifest:@remix-run/dev/assets-manifest"],
  "sourcesContent": ["// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "const { setupServer } = require(\"msw/node\");\n\nconst server = setupServer();\n\nserver.listen({ onUnhandledRequest: \"bypass\" });\n\nprocess.once(\"SIGINT\", () => server.close());\nprocess.once(\"SIGTERM\", () => server.close());\n", "import { createRequestHandler } from \"@remix-run/architect\";\nimport * as build from \"@remix-run/dev/server-build\";\n\nif (process.env.NODE_ENV !== \"production\") {\n  require(\"./mocks\");\n}\n\nexport const handler = createRequestHandler({\n  build,\n  mode: process.env.NODE_ENV,\n});\n", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/shares/query-share-data.ts\";\nimport * as route2 from \"./routes/shares/$shareCode.tsx\";\nimport * as route3 from \"./routes/shares/index.tsx\";\nimport * as route4 from \"./routes/logout.tsx\";\nimport * as route5 from \"./routes/index.tsx\";\nimport * as route6 from \"./routes/login.tsx\";\nimport * as route7 from \"./routes/notes.tsx\";\nimport * as route8 from \"./routes/notes/$noteId.tsx\";\nimport * as route9 from \"./routes/notes/index.tsx\";\nimport * as route10 from \"./routes/notes/new.tsx\";\nimport * as route11 from \"./routes/join.tsx\";\nimport * as route12 from \"./../cypress/support/test-routes/create-user.ts\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const publicPath = \"/_static/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/shares/query-share-data\": {\n      id: \"routes/shares/query-share-data\",\n      parentId: \"root\",\n      path: \"shares/query-share-data\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/shares/$shareCode\": {\n      id: \"routes/shares/$shareCode\",\n      parentId: \"root\",\n      path: \"shares/:shareCode\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/shares/index\": {\n      id: \"routes/shares/index\",\n      parentId: \"root\",\n      path: \"shares\",\n      index: true,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/notes\": {\n      id: \"routes/notes\",\n      parentId: \"root\",\n      path: \"notes\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/notes/$noteId\": {\n      id: \"routes/notes/$noteId\",\n      parentId: \"routes/notes\",\n      path: \":noteId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/notes/index\": {\n      id: \"routes/notes/index\",\n      parentId: \"routes/notes\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/notes/new\": {\n      id: \"routes/notes/new\",\n      parentId: \"routes/notes\",\n      path: \"new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/join\": {\n      id: \"routes/join\",\n      parentId: \"root\",\n      path: \"join\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"../cypress/support/test-routes/create-user\": {\n      id: \"../cypress/support/test-routes/create-user\",\n      parentId: \"root\",\n      path: \"__tests/create-user\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    }\n  };", "import { PassThrough } from \"stream\";\nimport { renderToPipeableStream } from \"react-dom/server\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { Response } from \"@remix-run/node\";\nimport type { EntryContext, Headers } from \"@remix-run/node\";\nimport isbot from \"isbot\";\n\nconst ABORT_DELAY = 5000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const callbackName = isbot(request.headers.get(\"user-agent\"))\n    ? \"onAllReady\"\n    : \"onShellReady\";\n\n  return new Promise((resolve, reject) => {\n    let didError = false;\n\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer context={remixContext} url={request.url} />,\n      {\n        [callbackName]() {\n          let body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              status: didError ? 500 : responseStatusCode,\n              headers: responseHeaders,\n            })\n          );\n          pipe(body);\n        },\n        onShellError(err: unknown) {\n          reject(err);\n        },\n        onError(error: unknown) {\n          didError = true;\n          console.error(error);\n        },\n      }\n    );\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import type {\n  LinksFunction,\n  // LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\n// import { json } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\nimport Navbar from \"./navbar\";\nimport Footer from \"./footer\";\n\nimport tailwindStylesheetUrl from \"./styles/tailwind.css\";\n// import { getUser } from \"./session.server\";\n\nexport const links: LinksFunction = () => {\n  return [\n    { rel: \"stylesheet\", href: tailwindStylesheetUrl },\n    // NOTE: Architect deploys the public directory to /_static/\n    { rel: \"icon\", href: \"/_static/favicon.ico\" },\n    { rel: \"stylesheet\", href: \"https://fonts.googleapis.com/css2?family=Arizonia&family=Bebas+Neue&family=Oswald:wght@300;400;700&display=swap\"}\n  ];\n};\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"Are you feeling Bahati\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\n// type LoaderData = {\n//   user: Awaited<ReturnType<typeof getUser>>;\n// };\n\n// export const loader: LoaderFunction = async ({ request }) => {\n//   return json<LoaderData>({\n//     user: await getUser(request),\n//   });\n// };\n\nexport default function App() {\n  return (\n    <html lang=\"en\" className=\"h-full\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"h-full\">\n        <Navbar />\n        <Outlet />\n        <ScrollRestoration />\n        <Footer />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import { Fragment } from 'react'\nimport { Disclosure, Menu, Transition } from '@headlessui/react'\nimport { BellIcon, MenuIcon, XIcon } from '@heroicons/react/outline'\nimport { ChevronDownIcon } from '@heroicons/react/solid'\nimport { useState } from 'react';\n\nconst navigation = [\n  { name: 'Dashboard', href: '/', current: true },\n  { name: 'Watchlists', href: '#', current: false }\n]\n\nconst shares = [\n  { name: 'VOW.DE', href: \"/shares/VOW3.DE\" },\n  { name: 'NFLX', href: \"/shares/NFLX\" },\n  { name: 'BP.L', href: \"/shares/BP.L\" },\n  { name: 'TSLA', href: \"/shares/TSLA\" },\n  { name: 'SPCE', href: \"/shares/SPCE\" },\n  { name: 'ROO.L', href: \"/shares/ROO.L\" },\n  { name: 'ENR', href: \"/shares/ENR\" },\n  { name: 'BABA', href: \"/shares/BABA\" },\n]\n\nfunction classNames(...classes: string[]) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function NavBar() {\n  // const [shareSelected, setShareSelected] = useState<string>('');\n\n  // function handleSelect(activeShare: any) {\n  //   if (activeShare) {\n  //     return setShareSelected(activeShare);\n  //   }\n  //   return;\n  // }\n\n  return (\n    <Disclosure as=\"nav\" className=\"bg-indigo-200\">\n      {({ open }) => (\n        <>\n          <div className=\"px-2 max-w-8xl sm:px-6 lg:px-8\">\n            <div className=\"relative flex items-center justify-between h-16\">\n              <div className=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\n                {/* Mobile menu button*/}\n                <Disclosure.Button className=\"inline-flex items-center justify-center p-2 text-indigo-500 rounded-md hover:text-white hover:bg-indigo-500\">\n                  <span className=\"sr-only\">Open main menu</span>\n                  {open ? (\n                    <XIcon className=\"block w-6 h-6\" aria-hidden=\"true\" />\n                  ) : (\n                    <MenuIcon className=\"block w-6 h-6\" aria-hidden=\"true\" />\n                  )}\n                </Disclosure.Button>\n              </div>\n              <div className=\"flex items-center justify-center flex-1 sm:items-stretch sm:justify-start\">\n                <div className=\"flex items-center flex-shrink-0\">\n                  <img\n                    className=\"block w-auto h-10 lg:hidden\"\n                    src=\"/_static/bahati_logo.png\"\n                    alt=\"Workflow\"\n                  />\n                  <img\n                    className=\"hidden w-auto h-10 lg:block\"\n                    src=\"/_static/bahati_logo.png\"\n                    alt=\"Workflow\"\n                  />\n                </div>\n                <div className=\"hidden sm:block sm:ml-6\">\n                  <div className=\"flex space-x-4\">\n                    {navigation.map((item) => (\n                      <a\n                        key={item.name}\n                        href={item.href}\n                        className={classNames(\n                          item.current ? 'text-rose-600' : 'text-white hover:bg-rose-600 hover:text-white',\n                          'px-3 py-2 rounded-md text-sm font-medium'\n                        )}\n                        aria-current={item.current ? 'page' : undefined}\n                      >\n                        {item.name}\n                      </a>\n                    ))}\n                  </div>\n                </div>\n              </div>\n              <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0\">\n                <Menu as=\"div\" className=\"relative inline-block text-left\">\n      <div>\n        <Menu.Button className=\"inline-flex justify-center w-full px-4 py-2 text-sm font-medium text-white rounded-md hover:bg-rose-600 bg-rose-300\">\n          { 'Shares' }\n          <ChevronDownIcon className=\"w-5 h-5 ml-2 -mr-1\" aria-hidden=\"true\" />\n        </Menu.Button>\n      </div>\n\n      <Transition\n        as={Fragment}\n        enter=\"transition ease-out duration-100\"\n        enterFrom=\"transform opacity-0 scale-95\"\n        enterTo=\"transform opacity-100 scale-100\"\n        leave=\"transition ease-in duration-75\"\n        leaveFrom=\"transform opacity-100 scale-100\"\n        leaveTo=\"transform opacity-0 scale-95\"\n      >\n        <Menu.Items className=\"absolute right-0 z-10 w-56 mt-2 origin-top-right bg-white rounded-md shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\">\n          <div className=\"py-1\">\n          {shares.map((shareItem) => (\n            <Menu.Item key={shareItem.name}>\n            {({ active }) => (\n              <a\n                href={shareItem.href}\n                className={classNames(\n                  active ? 'bg-rose-50 text-indigo-900' : 'text-indigo-700',\n                  'block px-4 py-2 text-sm'\n                )}\n              >\n                {shareItem.name}\n              </a>\n            )}\n          </Menu.Item>\n          ))}\n          </div>\n        </Menu.Items>\n      </Transition>\n    </Menu>\n\n                {/* Profile dropdown */}\n                <Menu as=\"div\" className=\"relative ml-3\">\n                  <div>\n                    <Menu.Button className=\"flex text-sm bg-gray-800 rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\">\n                      <span className=\"sr-only\">Open user menu</span>\n                      <img\n                        className=\"w-8 h-8 rounded-full\"\n                        src=\"/_static/min-profile.jpg\"\n                        alt=\"\"\n                      />\n                    </Menu.Button>\n                  </div>\n                  <Transition\n                    as={Fragment}\n                    enter=\"transition ease-out duration-100\"\n                    enterFrom=\"transform opacity-0 scale-95\"\n                    enterTo=\"transform opacity-100 scale-100\"\n                    leave=\"transition ease-in duration-75\"\n                    leaveFrom=\"transform opacity-100 scale-100\"\n                    leaveTo=\"transform opacity-0 scale-95\"\n                  >\n                    <Menu.Items className=\"absolute right-0 w-48 py-1 mt-2 origin-top-right bg-white rounded-md shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\">\n                      <Menu.Item>\n                        {({ active }) => (\n                          <a\n                            href=\"#\"\n                            className={classNames(active ? 'bg-gray-100' : '', 'block px-4 py-2 text-sm text-gray-700')}\n                          >\n                            Your Profile\n                          </a>\n                        )}\n                      </Menu.Item>\n                      <Menu.Item>\n                        {({ active }) => (\n                          <a\n                            href=\"#\"\n                            className={classNames(active ? 'bg-gray-100' : '', 'block px-4 py-2 text-sm text-gray-700')}\n                          >\n                            Settings\n                          </a>\n                        )}\n                      </Menu.Item>\n                      <Menu.Item>\n                        {({ active }) => (\n                          <a\n                            href=\"#\"\n                            className={classNames(active ? 'bg-gray-100' : '', 'block px-4 py-2 text-sm text-gray-700')}\n                          >\n                            Sign out\n                          </a>\n                        )}\n                      </Menu.Item>\n                    </Menu.Items>\n                  </Transition>\n                </Menu>\n              </div>\n            </div>\n          </div>\n\n          <Disclosure.Panel className=\"sm:hidden\">\n            <div className=\"px-2 pt-2 pb-3 space-y-1\">\n              {navigation.map((item) => (\n                <Disclosure.Button\n                  key={item.name}\n                  as=\"a\"\n                  href={item.href}\n                  className={classNames(\n                    item.current ? 'bg-rose-300 text-white' : 'text-rose-400 hover:bg-rose-600 hover:text-white',\n                    'block px-3 py-2 rounded-md text-base font-medium'\n                  )}\n                  aria-current={item.current ? 'page' : undefined}\n                >\n                  {item.name}\n                </Disclosure.Button>\n              ))}\n            </div>\n          </Disclosure.Panel>\n        </>\n      )}\n    </Disclosure>\n  )\n}", "export default function Footer() {\n  return (\n    <div className=\"flex items-center justify-between p-2 px-4 text-center text-white bg-rose-200\">\n      <img src=\"/_static/bahati_logo.png\"\n    alt=\"Bahati\" className=\"h-12\"/>\n    <span className=\"text-xl text-center font-arizonia\">Make it happen</span></div>\n  );\n};", "import type { LoaderFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { getSharesByCodeAndPeriod } from \"~/models/shares.server\";\n\nexport const loader: LoaderFunction = async ({request}) => {\n  const url = new URL(request.url)\n  const shareCode = url.searchParams.get('shareCode')\n  const start = url.searchParams.get('start')\n  console.log('route');\n  console.log(start);\n  const end = url.searchParams.get('end')\n  console.log(end);\n  const data = await getSharesByCodeAndPeriod(shareCode as string, start as string, end as string);\n  return json(data)\n}", "import type { StockData, StockDataByPeriodItem, StockDataByPeriodItems, TotalSharesItem, ExchangeRate } from '../types/shares';\nimport { calcGainLossDailyPercentage, calcGainLossDailyValue, calcTotalShareValue, calcGainLossPrice } from '../utils/shares';\nimport { mockShareData } from '../mocks/mockShareData';\nimport { mockShareDataByPeriod } from '../mocks/mockShareDataByPeriod';\n\nexport async function mockGetShareDataByCode(code: string): Promise<StockData> {\n  const res = new Response(\n    JSON.stringify(mockShareData(code))\n  );\n  const data = await res.json();\n\n  return {...data};\n}\n\nexport async function getExchangeRate(baseCurrency: string): Promise<ExchangeRate> {\n  const options = {\n    method: 'GET',\n    headers: {\n      'X-RapidAPI-Key': 'a302ddd933msheaa6a723d9bad7dp14c6c2jsn47db43bc1b5f',\n      'X-RapidAPI-Host': 'exchangerate-api.p.rapidapi.com'\n    }\n  };\n  \n  return fetch(`https://exchangerate-api.p.rapidapi.com/rapid/latest/${baseCurrency} `, options)\n    .then(response => response.json())\n    .then(({rates}) => rates['GBP'])\n    .catch(err => console.error(err));\n}\n\nexport async function getShareDataByCode(code: string): Promise<StockData> {\n  const encodedParams = new URLSearchParams();\n  encodedParams.append(\"symbol\", code);\n\n  const url = 'https://yahoo-finance97.p.rapidapi.com/stock-info';\n\n  const options = {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/x-www-form-urlencoded',\n      'X-RapidAPI-Key': 'a302ddd933msheaa6a723d9bad7dp14c6c2jsn47db43bc1b5f',\n      'X-RapidAPI-Host': 'yahoo-finance97.p.rapidapi.com'\n    },\n    body: encodedParams\n  };\n\n  const { data } = await fetch(url, options)\n    .then(res => res.json())\n    .catch(err => console.error('error:' + err));\n\n  return {\n    currentPrice: data.currentPrice,\n    currency: data.currency,\n    dayHigh: data.dayHigh,\n    dayLow: data.dayLow,\n    logo_url: data.logo_url,\n    longName: data.longName,\n    exchange: data.exchange\n  };\n}\n\nexport async function mockGetSharesByCodeAndPeriod(code: string, start: string, end: string): Promise<StockDataByPeriodItems> {\n  const res = new Response(\n    JSON.stringify(mockShareDataByPeriod('1W')) \n  )\n\n  const data = await res.json();\n\n  return data.map((rec: StockDataByPeriodItem, i: number) => {\n    const previousDay = data[i-1];\n    let gainLossValue = 0;\n    let gainLossPercentage = 0;\n    if (previousDay?.Close) {\n      gainLossValue = calcGainLossDailyValue(previousDay?.Close, rec?.Open);\n      gainLossPercentage = calcGainLossDailyPercentage(previousDay?.Close, rec?.Open);\n    }\n    return {...rec, gainLossValue, gainLossPercentage}\n  })\n}\n\nexport async function getSharesByCodeAndPeriod(code: string, start: string, end: string): Promise<StockDataByPeriodItems> {\n  const encodedParams = new URLSearchParams();\n  encodedParams.append(\"end\", end);\n  encodedParams.append(\"symbol\", code);\n  encodedParams.append(\"start\", start);\n\n  const url = 'https://yahoo-finance97.p.rapidapi.com/price-customdate';\n\n  const options = {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/x-www-form-urlencoded',\n      'X-RapidAPI-Key': 'a302ddd933msheaa6a723d9bad7dp14c6c2jsn47db43bc1b5f',\n      'X-RapidAPI-Host': 'yahoo-finance97.p.rapidapi.com'\n    },\n    body: encodedParams\n  };\n\n  const { data } = await fetch(url, options)\n    .then(res => res.json())\n    .catch(err => console.error('error:' + err));\n\n  return data.map((rec: StockDataByPeriodItem, i: number) => {\n    const previousDay = data[i-1];\n    let gainLossValue = 0;\n    let gainLossPercentage = 0;\n    if (previousDay?.Close) {\n      gainLossValue = calcGainLossDailyValue(previousDay?.Close, rec?.Open);\n      gainLossPercentage = calcGainLossDailyPercentage(previousDay?.Close, rec?.Open);\n    }\n    return {...rec, gainLossValue, gainLossPercentage}\n  })\n};\n\nexport async function getSharesByCode(code: string): Promise<TotalSharesItem[]> {\n  const url = 'https://o9x8jijxn1.execute-api.eu-west-1.amazonaws.com/dev/api/stock-info';\n\n  const options = {\n    method: 'GET',\n    headers: {\n      'content-type': 'application/json'\n    }\n  };\n\n  const data = await fetch(url, options)\n    .then(res => res.json())\n    .catch(err => console.error('error:' + err));\n\n  return data[code];\n}", "export const calcGainLossPrice = (totalShares: number, originalSharePrice: number, currentSharePrice: number) => ((totalShares * currentSharePrice) - (totalShares * originalSharePrice)).toFixed(2);\n\nexport const calcGainLossPercentage = (totalShares: number, originalSharePrice: number, currentSharePrice: number) => Number((Number((Number(totalShares * currentSharePrice) - Number(totalShares * originalSharePrice)).toFixed(2)) / (totalShares * currentSharePrice)).toFixed(2));\n\nexport const calcGainLossDailyValue = (previousSharePrice: number, todaysSharePrice: number) => Number((Number(todaysSharePrice) - Number(previousSharePrice)).toFixed(3));\n\nexport const calcGainLossDailyPercentage = ((previousSharePrice: number, todaysSharePrice: number) => Number((Number(todaysSharePrice) - Number(previousSharePrice)).toFixed(3)) / Number(todaysSharePrice) * 100);\n\nexport const calcTotalShareValue = (totalShares: number, currentSharePrice: number) => (totalShares * currentSharePrice).toFixed(2);", "import type { StockData } from '../types/shares';\n\nconst mockShareHeaderData: {[key:string]: StockData} = {\n  \"TSLA\": {\n    currentPrice: 276.83,\n    currency: 'USD',\n    dayHigh: 282.35,\n    dayLow: 274.28,\n    logo_url: 'https://logo.clearbit.com/tesla.com',\n    longName: 'Tesla',\n    exchange: 'NASDAQ'\n  },\n  \"NFLX\": {\n    currentPrice: 233.03,\n    currency: 'USD',\n    dayHigh: 233.88,\n    dayLow: 225.05,\n    logo_url: 'https://logo.clearbit.com/netflix.com',\n    longName: 'Netflix',\n    exchange: 'NASDAQ'\n  },\n  \"SPCE\": {\n    currentPrice: 5.85,\n    currency: 'USD',\n    dayHigh: 5.95,\n    dayLow: 5.63,\n    logo_url: 'https://logo.clearbit.com/virgingalactic.com',\n    longName: 'Virgin Galactic',\n    exchange: 'NYSE'\n  },\n  \"VOW3.DE\": {\n    currentPrice: 148.96,\n    currency: 'EUR',\n    dayHigh: 148.96,\n    dayLow: 141.38,\n    logo_url: 'https://logo.clearbit.com/volkswagenag.com',\n    longName: 'Volkswagon',\n    exchange: 'DE'\n  },\n  \"ROO.L\": {\n    currentPrice: 81.30,\n    currency: 'GBP',\n    dayHigh: 82.04,\n    dayLow: 76.10,\n    logo_url: 'https://logo.clearbit.com/deliveroo.com',\n    longName: 'Deliveroo',\n    exchange: 'LSE'\n  },\n  \"BP.L\": {\n    currentPrice: 453.7,\n    currency: 'GBP',\n    dayHigh: 457.55,\n    dayLow: 443.95,\n    logo_url: 'https://logo.clearbit.com/bp.com',\n    longName: 'BP',\n    exchange: 'LSE'\n  },\n  \"ENR\": {\n    currentPrice: 28.01,\n    currency: 'USD',\n    dayHigh: 28.65,\n    dayLow: 27.89,\n    logo_url: 'https://logo.clearbit.com/energizerholdings.com',\n    longName: 'Energizer Holdings',\n    exchange: 'NYSE'\n  },\n\n}\n\nexport function mockShareData(code: string): StockData {\n  return mockShareHeaderData[code];\n}\n", "import type { StockDataByPeriodItems } from '../types/shares';\n\nfunction randomNumber(min: number, max: number) {\n  return Math.random() * (max - min) + min;\n}\n\nfunction createFakeData(period: number): StockDataByPeriodItems {\n  const now = new Date();\n  return [...Array(period).keys()].map((k) => {\n    let date = now.setDate(now.getDate()-1)\n    return ({\n    'Adj Close': randomNumber(300, 315),\n      Close: randomNumber(300, 315),\n      Date: date,\n      High: randomNumber(300, 315),\n      Low: randomNumber(300, 315),\n      Open: randomNumber(300, 315),\n      Volume: 55843347,\n      gainLossValue: randomNumber(1, 5),\n      gainLossPercentage: randomNumber(2,5)\n    })\n  });\n}\n\nconst mockShareDataByPeriodData: {[key:string]: StockDataByPeriodItems} = {\n  '1W': createFakeData(5),\n  '1M': createFakeData(30),\n  '3M': createFakeData(90),\n  '1Y': createFakeData(365)\n};\n\nexport function mockShareDataByPeriod(period: string): StockDataByPeriodItems {\n  return mockShareDataByPeriodData[period];\n}\n", "import type { ActionFunction, LoaderFunction, LinksFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { useEffect, useRef, useState } from 'react';\nimport { useCatch, useLoaderData, useFetcher, useParams } from \"@remix-run/react\";\nimport invariant from \"tiny-invariant\";\nimport datepickerCss from 'react-datepicker/dist/react-datepicker.css';\nimport type { getShareDataByCode, getSharesByCodeAndPeriod} from \"~/models/shares.server\";\nimport { mockGetShareDataByCode, mockGetSharesByCodeAndPeriod , getSharesByCode} from \"~/models/shares.server\";\nimport type { StockDataByPeriodItems } from '../../types/shares';\nimport { formatDateForDisplay, retrieveStartAndEndDates } from '../../utils/date';\nimport Chart from '../../components/chart';\nimport Table from '../../components/table';\nimport CurrentDayShareHeader from '../../components/currentDayShareHeader';\nimport ShareNav from '../../components/shareNav';\nimport ShareValueCard from '../../components/shareValueCards';\n\ntype LoaderData = {\n  shareHeaderData: Awaited<ReturnType<typeof getShareDataByCode>>;\n  shareData: Awaited<ReturnType<typeof getSharesByCodeAndPeriod>>;\n  totalSharesByCode: Awaited<ReturnType<typeof getSharesByCode>>;\n};\n\nexport const links: LinksFunction = () => [\n  { rel: 'stylesheet', href: datepickerCss },\n]\n\nexport const loader: LoaderFunction = async ({params,}) => {\n  invariant(params.shareCode, \"Expected params.shareCode\");\n  const {start, end} = retrieveStartAndEndDates('1M');\n  return json({\n    // shareHeaderData: await getShareDataByCode(params?.shareCode as string),\n    // shareData: await getSharesByCodeAndPeriod(params?.shareCode as string, start, end),\n    // totalSharesByCode: await getSharesByCode(params?.shareCode as string)\n    shareHeaderData: await mockGetShareDataByCode(params?.shareCode as string),\n    shareData: await mockGetSharesByCodeAndPeriod(params?.shareCode as string, start, end),\n    totalSharesByCode: await getSharesByCode(params?.shareCode as string)\n  });\n};\n\nexport const action: ActionFunction = async ({\n  request,\n}) => {\n  const formData = await request.formData();\n  const start = formData.get('start_date');\n  const end = formData.get('end_date');\n  const shareCode = formData.get('shareCode');\n\n  return json({\n    shareData: await mockGetSharesByCodeAndPeriod(shareCode as string, start as string, end as string)\n    // shareData: await getSharesByCodeAndPeriod(shareCode as string, start as string, end as string),\n  });\n};\n\nexport default function SharePage() {\n  const params = useParams();\n  const { shareHeaderData, shareData, totalSharesByCode } = useLoaderData() as LoaderData;\n  const [displayData, setDisplayData] = useState<string>('chart');\n  const [period, setPeriod] = useState('1W');\n  const [start, setStart] = useState<string>(retrieveStartAndEndDates('1W').start);\n  const [end, setEnd] = useState<string>(retrieveStartAndEndDates('1W').end);\n  // const [shareCode, setShareCode] = useState<string>('');\n  const [shareDataByPeriod, setShareDataByPeriod] = useState<StockDataByPeriodItems>([])\n  const fetcher = useFetcher()\n\n  // TODO: This does not look like the remix way of doing things\n  // set graph/table share data by period to shareDataByPeriod from loader\n  useEffect(() => {\n     if (shareDataByPeriod.length !== 0) {\n       setShareDataByPeriod(shareDataByPeriod);\n     } else {\n      setShareDataByPeriod(shareData)\n     }\n  }, [shareDataByPeriod, shareData]);\n\n  // useEffect(() => {\n  //   console.log(params);\n  //   console.log(shareCode)\n  //   if (!params.shareCode || params.shareCode === shareCode) return;\n  //   console.log('SHARECODE PARAM CHANGED')\n  //   console.log(params);\n  //   setShareCode(params?.shareCode as string);\n  // }, [params, shareCode])\n\n  function handleDisplayMode(mode: string) {\n    setDisplayData(mode);\n  }\n\n  function handleStockPeriod(period: string) {\n    const data = retrieveStartAndEndDates(period);\n    setEnd(data?.end);\n    setStart(data?.start);\n    setPeriod(period);\n    fetcher.load(`/shares/query-share-data?shareCode=${params.shareCode}&start=${data?.start}&end=${data?.end}`)\n  }\n\n  useEffect(() => {\n    if (fetcher.data) {\n      setShareDataByPeriod(fetcher.data);\n    }\n  }, [fetcher]);\n\n  return shareDataByPeriod && (\n    <div>\n      <div className=\"px-4 pt-4\">\n        <CurrentDayShareHeader shareCode={params.shareCode as string} data={shareHeaderData} />\n      </div>\n      <div className=\"p-4\">\n        <div className=\"border rounded-lg\">\n         <ShareNav shareCode={params.shareCode as string} displayData={displayData} handleStockPeriod={handleStockPeriod} handleDisplayMode={handleDisplayMode} period={period} start={start} end={end} />\n         <div className=\"px-4 pt-2 text-slate-600\"><span className=\"text-xs rounded-lg\">Selected period: </span><span className=\"text-sm rounded-lg text-rose-600\">{formatDateForDisplay(start)} - {formatDateForDisplay(end)}</span></div>\n          { displayData === 'table'\n            ? <Table data={shareDataByPeriod} />\n            : <Chart shareData={shareDataByPeriod} shareCode={params.shareCode as string} originalData={totalSharesByCode} />\n          }\n        </div>\n      </div>\n      <div className=\"flex justify-center p-4\">\n        <ShareValueCard currentPrice={Number(shareHeaderData.currentPrice)} shareData={totalSharesByCode} />\n      </div>\n  </div>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n\n  return <div>An unexpected error occurred: {error.message}</div>;\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  if (caught.status === 404) {\n    return <div>Share not found</div>;\n  }\n\n  throw new Error(`Unexpected caught response with status: ${caught.status}`);\n}\n", "function subtractDateByDays(days: number) {\n  const today = new Date();\n  const start = today.setDate(today.getDate() - days);\n  return new Date(start).toISOString().slice(0, 10);\n}\n\nexport function retrieveStartAndEndDates(period: string) {\n  switch (period) {\n    case '1D':\n      return {\n        start: new Date().toISOString().slice(0, 10),\n        end: new Date().toISOString().slice(0, 10)\n      };\n    case '1W':\n      return {\n        start: subtractDateByDays(7),\n        end: new Date().toISOString().slice(0, 10),\n      };\n    case '1M':\n      return {\n        start: subtractDateByDays(30),\n        end: new Date().toISOString().slice(0, 10),\n      };\n    case '3M':\n      return {\n        start: subtractDateByDays(90),\n        end: new Date().toISOString().slice(0, 10),\n      };\n    case '1Y':\n      return {\n        start: subtractDateByDays(365),\n        end: new Date().toISOString().slice(0, 10),\n      };\n    default:\n      return {\n        start: new Date().toISOString().slice(0, 10),\n        end: new Date().toISOString().slice(0, 10)\n      };\n  }\n}\n\nexport function formatDateForDisplay(date: number | string) {\n  return new Date(date).toLocaleDateString('en-GB');\n}", "import React from 'react';\nimport type { StockDataByPeriodItems, TotalShareItemsByCode } from \"../types/shares\";\nimport { formatDateForDisplay } from '../utils/date';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\ninterface Props {\n  shareCode: string;\n  shareData: StockDataByPeriodItems;\n  originalData: TotalShareItemsByCode;\n}\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n);\n\nexport default function Chart(prop: Props) {\n  const { shareCode, shareData, originalData } = prop;\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'bottom' as const,\n      },\n      title: {\n        display: true,\n        text: `${shareCode} shares`,\n        color: 'rgb(129, 140, 248)'\n      },\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Period',\n          color: 'rgb(251, 113, 133)'\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Share Price',\n          color: 'rgb(251, 113, 133)'\n        }\n      }\n    }\n  };\n\n  const labels = shareData.map(({ Date }) => formatDateForDisplay(Date))\n\n  const openingPrices = [\n    {\n      label: 'Opening price',\n      data: shareData.map(({ Open }) => Open),\n      borderColor: 'rgb(251, 113, 133)',\n      backgroundColor: 'rgba(254, 205, 211, 0.5)',\n      tension: 0.4,\n      fill: true\n    }\n  ];\n\n  const purchaseHistoryLines = originalData.map(({ originalCostPrice, totalShares, purchaseDate }) => ({\n      label: `${totalShares} bought on ${purchaseDate}`,\n      data: shareData.map(() => originalCostPrice),\n      borderColor: 'rgb(99, 102, 241)',\n      backgroundColor: 'rgba(199, 210, 254, 0.5)',\n      pointRadius: 0\n  }));\n\n  // @ts-ignore\n  const datasets = openingPrices.concat(purchaseHistoryLines);\n\n  const data = {\n    labels,\n    datasets,\n  };\n\n  return <div className=\"p-4\"><Line options={options} data={data} /></div>;\n}\n", "\nimport type { StockDataByPeriodItem, StockDataByPeriodItems } from \"../types/shares\";\nimport { formatDateForDisplay } from '../utils/date';\n\ninterface Props {\n  data: StockDataByPeriodItems;\n}\n\nexport default function TableData(prop: Props) {\n  const { data } = prop;\n  const rowData = data.map((shareRecord: StockDataByPeriodItem) => {\n    return (\n      <tr key={`${shareRecord.Date}`}>\n        <td className=\"px-6 py-4 text-sm whitespace-no-wrap border-b border-gray-200 text-cyan-800\">{formatDateForDisplay(shareRecord.Date)}</td>\n        <td className=\"px-6 py-4 text-sm whitespace-no-wrap border-b border-gray-200 text-cyan-800\">{shareRecord.Open.toFixed(3)}</td>\n        <td className=\"px-6 py-4 text-sm whitespace-no-wrap border-b border-gray-200 text-cyan-800\">{shareRecord.Close.toFixed(3)}</td>\n        <td className=\"px-6 py-4 text-sm whitespace-no-wrap border-b border-gray-200 text-cyan-800\">{shareRecord.gainLossValue}</td>\n        <td className=\"px-6 py-4 text-sm whitespace-no-wrap border-b border-gray-200 text-cyan-800\">{shareRecord.gainLossPercentage.toFixed(1)}%</td>\n        <td className=\"hidden px-6 py-4 text-sm whitespace-no-wrap border-b border-gray-200 text-cyan-800 md:table-cell\">{shareRecord.High.toFixed(3)}</td>\n        <td className=\"hidden px-6 py-4 text-sm whitespace-no-wrap border-b border-gray-200 text-cyan-800 md:table-cell\">{shareRecord.Low.toFixed(3)}</td>\n      </tr>\n    );\n  });\n  return (\n    <div className=\"flex flex-col p-4\">\n      <div className=\"py-2 -my-2 overflow-x-auto sm:-mx-6 sm:px-6 lg:-mx-8 lg:px-8\">\n        <div className=\"inline-block min-w-full overflow-hidden align-middle border-b border-gray-200 shadow sm:rounded-lg\">\n            <table className=\"min-w-full\">\n                <thead>\n                    <tr className=\"text-xs font-medium leading-4 tracking-wider text-left text-gray-400 uppercase bg-indigo-100 border-b border-blue-400\">\n                        <th\n                            className=\"px-6 py-3 \">\n                            Date</th>\n                        <th\n                            className=\"px-6 py-3 \">\n                            Open</th>\n                        <th\n                            className=\"px-6 py-3 \">\n                            Close</th>\n                        <th\n                            className=\"px-6 py-3 \">\n                            Daily Change (Value)</th>\n                        <th\n                            className=\"px-6 py-3 \">\n                            Daily Change (%)</th>\n                        <th\n                            className=\"hidden px-6 py-3 md:table-cell\">\n                            High</th>\n                        <th\n                            className=\"hidden px-6 py-3 md:table-cell\">\n                            Low</th>\n                    </tr>\n                </thead>\n\n                <tbody className=\"bg-white\">\n                    {rowData}\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n  );\n}", "import type { StockData } from \"../types/shares\";\nimport { ArrowCircleUpIcon, ArrowCircleDownIcon } from '@heroicons/react/solid';\n\ninterface Props {\n  data: StockData;\n  shareCode: string;\n}\n\nexport default function CurrentDayShareHeader(prop: Props) {\n  const { data, shareCode} = prop;\n\n  /* Logos are different dimensions */\n  function customLogoClass() {\n    if (shareCode === 'TSLA') {\n      return 'w-8 h-10 sm:w-12 sm:h-18'\n    } else if (shareCode === 'SPCE' || shareCode === 'VOW3.DE' || shareCode === 'ENR') {\n      return 'w-12 h-12 sm:w-16 sm:h-16'\n    } else if (shareCode === 'ROO.L') {\n      return 'h-6 sm:h-8'\n    }\n    else {\n      // BP.L\n      // BABA\n      // NFLX\n      return 'w-20 h-12'\n    }\n  }\n\n  /* SPCE logo background is black, display different background */\n  function backgroundNav() {\n    if (shareCode === 'SPCE') {\n      return 'from-pink-400 to-blue-400';\n    } else {\n      return 'from-sky-400 to-blue-600';\n    }\n  }\n\n  return (\n    <div className={`grid grid-cols-3 p-2 bg-gray-200 border-2 rounded-lg bg-gradient-to-r ${backgroundNav()}`}>\n      <div className=\"...\"><img className={`${customLogoClass()}`} src={data.logo_url} alt={`${shareCode}-logo`} height=\"80\" width=\"80\" /></div>\n      <div className=\"row-span-2 ... justify-center items-center self-center justify-items-center content-center text-center\"><span className=\"block text-xs text-red-200 uppercase\">Current Price: </span><span className=\"text-xl sm:text-2xl text-slate-100\">{data.currentPrice} {data.currency}</span></div>\n      <div className=\"... flex flex-row justify-end\"><ArrowCircleUpIcon className=\"w-6 h-6 text-zinc-300\" aria-hidden=\"true\" /> <span className=\"text-sm sm:text-base text-lime-200\"> {data.dayHigh} {data.currency}</span></div>\n      <div className=\"...\"><span className=\"items-center text-xs sm:text-sm text-sky-200\">{shareCode}</span></div>\n      <div className=\"... flex flex-row justify-end\"><ArrowCircleDownIcon className=\"w-6 h-6 text-zinc-300\" aria-hidden=\"true\" /><span className=\"text-sm text-yellow-300 sm:text-base\">{data.dayLow} {data.currency}</span></div>\n    </div>\n  );\n}", "import { ChartBarIcon, TableIcon } from '@heroicons/react/outline';\nimport { Form } from \"@remix-run/react\";\n\ninterface Props {\n  shareCode: string;\n  displayData: string;\n  period: string;\n  start: string;\n  end: string;\n  handleStockPeriod: (period: string) => void;\n  handleDisplayMode: (mode: string) => void;\n}\n\nexport default function ShareNav(prop: Props) {\n  const { shareCode, displayData, handleStockPeriod, handleDisplayMode, period, start, end} = prop;\n\n  function isActive(buttonVal: string) {\n    return period  === buttonVal\n  } \n\n  return (\n    <Form method=\"post\">\n      <div className=\"flex items-center h-12 px-4 bg-gray-200 rounded-lg\">\n        <ul className=\"flex items-center\">\n          <li className=\"mr-4\">\n            <button type=\"submit\" className={`items-center px-3 py-2 font-bold text-white bg-rose-300 border border-rose-500 rounded hover:bg-rose-500 hover:border-rose-300  ${isActive('1W') ? 'bg-rose-500 border border-rose-300' : ''}`} onClick={() => handleStockPeriod('1W')} name='1W'>1W</button>\n          </li>\n          <li className=\"mr-4\">\n          <button type=\"submit\" className={`items-center px-3 py-2 font-bold text-white bg-rose-300 border border-rose-500 rounded hover:bg-rose-500 hover:border-rose-300 ${isActive('1M') ? 'bg-rose-500' : ''}`} onClick={() => handleStockPeriod('1M')} name='1M'>1M</button>\n          </li>\n          <li className=\"mr-4\">\n          <button type=\"submit\" className={`items-center px-3 py-2 font-bold text-white bg-rose-300 border border-rose-500 rounded hover:bg-rose-500 hover:border-rose-300 ${isActive('3M') ? 'bg-rose-500' : ''}`} onClick={() => handleStockPeriod('3M')} name='3M'>3M</button>\n          </li>\n          <li className=\"mr-4\">\n          <button type=\"submit\" className={`items-center px-4 py-2 mr-4 font-bold text-white bg-rose-300 border border-rose-500 rounded hover:bg-rose-500 hover:border-rose-300 ${isActive('1Y') ? 'bg-rose-500' : ''}`} onClick={() => handleStockPeriod('1Y')} name='1Y'>1Y</button>\n          </li>\n          <input type=\"text\" name=\"share_code\" value={shareCode} hidden readOnly></input>\n          <input type=\"text\" name=\"start_date\" value={start} hidden readOnly></input>\n          <input type=\"text\" name=\"end_date\" value={end} hidden readOnly></input>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"gray\" className=\"w-6 h-6\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 6.75a.75.75 0 110-1.5.75.75 0 010 1.5zM12 12.75a.75.75 0 110-1.5.75.75 0 010 1.5zM12 18.75a.75.75 0 110-1.5.75.75 0 010 1.5z\" />\n          </svg>\n\n          <li className=\"justify-end ml-4\">\n              { displayData === 'chart'\n                ? <button type=\"button\" className=\"items-center justify-center text-indigo-300 w-9 h-9 hover:text-indigo-500\" onClick={() => handleDisplayMode('table')}><ChartBarIcon className=\"w-8 h-8\" aria-hidden=\"true\" /></button>\n                : <button type=\"button\" className=\"items-center text-indigo-300 w-9 h-9 hover:text-indigo-500\" onClick={() => handleDisplayMode('chart')}><TableIcon className=\"w-8 h-8\" aria-hidden=\"true\"/></button>\n              }\n          </li>\n        </ul>\n      </div>\n   </Form>\n  );\n}", "import { calcTotalShareValue, calcGainLossPrice } from '../utils/shares';\nimport type { TotalShareItemsByCode } from '../types/shares';\nimport { useEffect, useState } from 'react';\n\ninterface Props {\n  currentPrice: number;\n  shareData: TotalShareItemsByCode\n}\n\nexport default function ValueCard(props: Props) {\n  const { currentPrice, shareData } = props;\n  \n  const [showCurrent, setShowCurrent] = useState<boolean>(false);\n  const [showProfitLoss, setShowProfitLoss] = useState<boolean>(false);\n\n  function handleToggleCurrent() {\n    setShowCurrent(!showCurrent);\n  }\n\n  function handleToggleProfitLoss() {\n    setShowProfitLoss(!showProfitLoss);\n  }\n\n\n  const totalValueSpent = shareData?.reduce((acc, shareData) => {\n    const valueSpent = Number(calcTotalShareValue(shareData.totalShares, shareData.originalCostPrice));\n    return acc + valueSpent;\n  }, 0);\n\n  const totalCurrentValue = shareData?.reduce((acc, shareData) => {\n    const valueSpent = Number(calcTotalShareValue(shareData.totalShares, currentPrice));\n    return acc + valueSpent;\n  }, 0);\n\n  const totalGainLoss = Number((Number(totalCurrentValue) - Number(totalValueSpent)).toFixed(2));\n\n  return (\n    <div className=\"container grid items-center gap-8 pb-8 sm:grid-cols-2 sm:gap-16 md:gap-24\">\n      <div className={`items-center justify-center p-8 text-center bg-gradient-to-r from-rose-100 to-rose-200 border border-rose-600 rounded-lg ${showCurrent ? \"\" : \"blur-sm\"}`} onClick={handleToggleCurrent}>\n        <div className=\"text-2xl sm:text-3xl text-rose-500\">\u00A3{showCurrent ? totalCurrentValue?.toLocaleString('en-GB') : 'shh'}</div>\n        <div className=\"text-xs uppercase text-rose-400\">Current Value</div>\n      </div>\n      <div className={`items-center justify-center p-8 text-center border border-indigo-500  bg-gradient-to-r from-indigo-100 to-indigo-200 rounded-lg ${showProfitLoss ? \"\" : \"blur-sm\"}`} onClick={handleToggleProfitLoss}>\n        <div className=\"text-2xl text-indigo-500 sm:text-3xl\">\u00A3{showProfitLoss ? totalGainLoss?.toLocaleString('en-GB') : 'shh'}</div>\n        <div className=\"text-xs text-indigo-400 uppercase\">Profit/Loss</div>\n      </div>\n    </div>\n  );\n}", "import { Link } from \"@remix-run/react\";\n\nexport default function SharesIndexPage() {\n  return (\n    <p>\n      No share selected. Select a share\n      <Link to=\"new\" className=\"text-blue-500 underline\">\n        Do Something else\n      </Link>\n    </p>\n  );\n}\n", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\n\nimport { logout } from \"~/session.server\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  return logout(request);\n};\n\nexport const loader: LoaderFunction = async () => {\n  return redirect(\"/\");\n};\n", "import { createCookieSessionStorage, redirect } from \"@remix-run/node\";\nimport invariant from \"tiny-invariant\";\n\nimport type { User } from \"~/models/user.server\";\nimport { getUserById } from \"~/models/user.server\";\n\ninvariant(process.env.SESSION_SECRET, \"SESSION_SECRET must be set\");\n\nexport const sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: \"__session\",\n    httpOnly: true,\n    path: \"/\",\n    sameSite: \"lax\",\n    secrets: [process.env.SESSION_SECRET],\n    secure: process.env.NODE_ENV === \"production\",\n  },\n});\n\nconst USER_SESSION_KEY = \"userId\";\n\nexport async function getSession(request: Request) {\n  const cookie = request.headers.get(\"Cookie\");\n  return sessionStorage.getSession(cookie);\n}\n\nexport async function getUserId(\n  request: Request\n): Promise<User[\"id\"] | undefined> {\n  const session = await getSession(request);\n  const userId = session.get(USER_SESSION_KEY);\n  return userId;\n}\n\nexport async function getUser(request: Request) {\n  const userId = await getUserId(request);\n  if (userId === undefined) return null;\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function requireUserId(\n  request: Request,\n  redirectTo: string = new URL(request.url).pathname\n) {\n  const userId = await getUserId(request);\n  if (!userId) {\n    const searchParams = new URLSearchParams([[\"redirectTo\", redirectTo]]);\n    throw redirect(`/login?${searchParams}`);\n  }\n  return userId;\n}\n\nexport async function requireUser(request: Request) {\n  const userId = await requireUserId(request);\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function createUserSession({\n  request,\n  userId,\n  remember,\n  redirectTo,\n}: {\n  request: Request;\n  userId: string;\n  remember: boolean;\n  redirectTo: string;\n}) {\n  const session = await getSession(request);\n  session.set(USER_SESSION_KEY, userId);\n  return redirect(redirectTo, {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.commitSession(session, {\n        maxAge: remember\n          ? 60 * 60 * 24 * 7 // 7 days\n          : undefined,\n      }),\n    },\n  });\n}\n\nexport async function logout(request: Request) {\n  const session = await getSession(request);\n  return redirect(\"/\", {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.destroySession(session),\n    },\n  });\n}\n", "import arc from \"@architect/functions\";\nimport bcrypt from \"bcryptjs\";\nimport invariant from \"tiny-invariant\";\n\nexport type User = { id: `email#${string}`; email: string };\nexport type Password = { password: string };\n\nexport async function getUserById(id: User[\"id\"]): Promise<User | null> {\n  const db = await arc.tables();\n  const result = await db.user.query({\n    KeyConditionExpression: \"pk = :pk\",\n    ExpressionAttributeValues: { \":pk\": id },\n  });\n\n  const [record] = result.Items;\n  if (record) return { id: record.pk, email: record.email };\n  return null;\n}\n\nexport async function getUserByEmail(email: User[\"email\"]) {\n  return getUserById(`email#${email}`);\n}\n\nasync function getUserPasswordByEmail(email: User[\"email\"]) {\n  const db = await arc.tables();\n  const result = await db.password.query({\n    KeyConditionExpression: \"pk = :pk\",\n    ExpressionAttributeValues: { \":pk\": `email#${email}` },\n  });\n\n  const [record] = result.Items;\n\n  if (record) return { hash: record.password };\n  return null;\n}\n\nexport async function createUser(\n  email: User[\"email\"],\n  password: Password[\"password\"]\n) {\n  const hashedPassword = await bcrypt.hash(password, 10);\n  const db = await arc.tables();\n  await db.password.put({\n    pk: `email#${email}`,\n    password: hashedPassword,\n  });\n\n  await db.user.put({\n    pk: `email#${email}`,\n    email,\n  });\n\n  const user = await getUserByEmail(email);\n  invariant(user, `User not found after being created. This should not happen`);\n\n  return user;\n}\n\nexport async function deleteUser(email: User[\"email\"]) {\n  const db = await arc.tables();\n  await db.password.delete({ pk: `email#${email}` });\n  await db.user.delete({ pk: `email#${email}` });\n}\n\nexport async function verifyLogin(\n  email: User[\"email\"],\n  password: Password[\"password\"]\n) {\n  const userPassword = await getUserPasswordByEmail(email);\n\n  if (!userPassword) {\n    return undefined;\n  }\n\n  const isValid = await bcrypt.compare(password, userPassword.hash);\n  if (!isValid) {\n    return undefined;\n  }\n\n  return getUserByEmail(email);\n}\n", "import { Link } from \"@remix-run/react\";\n\nimport { useOptionalUser } from \"~/utils\";\n\nconst shares = [\n  { name: 'VOW.DE', href: \"/shares/VOW3.DE\" },\n  { name: 'NFLX', href: \"/shares/NFLX\" },\n  { name: 'BP.L', href: \"/shares/BP.L\" },\n  { name: 'TSLA', href: \"/shares/TSLA\" },\n  { name: 'SPCE', href: \"/shares/SPCE\" },\n  { name: 'ROO.L', href: \"/shares/ROO.L\" },\n  { name: 'ENR', href: \"/shares/ENR\" },\n  { name: 'BABA', href: \"/shares/BABA\" },\n]\n\nexport default function Index() {\n  const user = useOptionalUser();\n  return (\n    <main className=\"antialiased\">\n      <div className=\"flex flex-wrap p-8 bg-[url('/_static/ubud-capella.jpg')] bg-cover opacity-80 h-96\">\n        <div className=\"items-center content-center self-center text-3xl text-left sm:text-3xl lg:text-5xl md:text-4xl font-oswald\">\n          <div className=\"p-2 opacity-80\">\n            <h1 className=\"text-indigo-200\">Every great dream begins with a <span className=\"text-4xl sm:text-5xl lg:text-6xl text-rose-100\">dreamer</span>.</h1>\n          </div>\n        </div>\n      </div>\n      <div className=\"flex flex-row flex-wrap justify-around h-auto bg-rose-100 sm:h-80 bg-[url('/_static/crosspattern2.svg')] pb-4\">\n        <div className=\"flex items-center content-center self-center\"><img\n          className=\"items-center content-center self-center block w-48 mx-auto sm:w-64\"\n          src=\"/_static/bahati_logo.png\"\n          alt=\"Bahati\"\n        />\n        </div>\n        <div className=\"grid grid-cols-2 p-4 mt-4 md:grid-cols-3 md:p-12 lg:p-8 gap-x-12 md:gap-8 gap-y-8\">\n          {shares.map((item) => (\n            <Link\n              className=\"w-32 h-10 py-2 text-center text-white border rounded-md hover:border-indigo-300 drop-shadow-md bg-gradient-to-r hover:from-indigo-200 hover:to-indigo-400 from-rose-400 border-rose-300 to-rose-200 bg-rose-300\"\n              to={{\n                pathname: item.href\n              }}\n              key={item.name}\n            >\n          {item.name}\n          </Link>\n          ))}\n        </div>\n      </div>\n    </main>\n  );\n}\n", "import { useMatches } from \"@remix-run/react\";\nimport { useMemo } from \"react\";\n\nimport type { User } from \"~/models/user.server\";\n\nconst DEFAULT_REDIRECT = \"/\";\n\n/**\n * This should be used any time the redirect path is user-provided\n * (Like the query string on our login/signup pages). This avoids\n * open-redirect vulnerabilities.\n * @param {string} to The redirect destination\n * @param {string} defaultRedirect The redirect to use if the to is unsafe.\n */\nexport function safeRedirect(\n  to: FormDataEntryValue | string | null | undefined,\n  defaultRedirect: string = DEFAULT_REDIRECT\n) {\n  if (!to || typeof to !== \"string\") {\n    return defaultRedirect;\n  }\n\n  if (!to.startsWith(\"/\") || to.startsWith(\"//\")) {\n    return defaultRedirect;\n  }\n\n  return to;\n}\n\n/**\n * This base hook is used in other hooks to quickly search for specific data\n * across all loader data using useMatches.\n * @param {string} id The route id\n * @returns {JSON|undefined} The router data or undefined if not found\n */\nexport function useMatchesData(\n  id: string\n): Record<string, unknown> | undefined {\n  const matchingRoutes = useMatches();\n  const route = useMemo(\n    () => matchingRoutes.find((route) => route.id === id),\n    [matchingRoutes, id]\n  );\n  return route?.data;\n}\n\nfunction isUser(user: any): user is User {\n  return user && typeof user === \"object\" && typeof user.email === \"string\";\n}\n\nexport function useOptionalUser(): User | undefined {\n  const data = useMatchesData(\"root\");\n  if (!data || !isUser(data.user)) {\n    return undefined;\n  }\n  return data.user;\n}\n\nexport function useUser(): User {\n  const maybeUser = useOptionalUser();\n  if (!maybeUser) {\n    throw new Error(\n      \"No user found in root loader, but user is required by useUser. If user is optional, try useOptionalUser instead.\"\n    );\n  }\n  return maybeUser;\n}\n\nexport function validateEmail(email: unknown): email is string {\n  return typeof email === \"string\" && email.length > 3 && email.includes(\"@\");\n}\n", "import type {\n  ActionFunction,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nimport { createUserSession, getUserId } from \"~/session.server\";\nimport { verifyLogin } from \"~/models/user.server\";\nimport { safeRedirect, validateEmail } from \"~/utils\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await getUserId(request);\n  if (userId) return redirect(\"/\");\n  return json({});\n};\n\ninterface ActionData {\n  errors?: {\n    email?: string;\n    password?: string;\n  };\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"));\n  const remember = formData.get(\"remember\");\n\n  if (!validateEmail(email)) {\n    return json<ActionData>(\n      { errors: { email: \"Email is invalid\" } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof password !== \"string\" || password.length === 0) {\n    return json<ActionData>(\n      { errors: { password: \"Password is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (password.length < 8) {\n    return json<ActionData>(\n      { errors: { password: \"Password is too short\" } },\n      { status: 400 }\n    );\n  }\n\n  const user = await verifyLogin(email, password);\n\n  if (!user) {\n    return json<ActionData>(\n      { errors: { email: \"Invalid email or password\" } },\n      { status: 400 }\n    );\n  }\n\n  return createUserSession({\n    request,\n    userId: user.id,\n    remember: remember === \"on\" ? true : false,\n    redirectTo,\n  });\n};\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"Login\",\n  };\n};\n\nexport default function LoginPage() {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") || \"/notes\";\n  const actionData = useActionData() as ActionData;\n  const emailRef = React.useRef<HTMLInputElement>(null);\n  const passwordRef = React.useRef<HTMLInputElement>(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.email) {\n      emailRef.current?.focus();\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <div className=\"flex flex-col justify-center min-h-full\">\n      <div className=\"w-full max-w-md px-8 mx-auto\">\n        <Form method=\"post\" className=\"space-y-6\" noValidate>\n          <div>\n            <label\n              htmlFor=\"email\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Email address\n            </label>\n            <div className=\"mt-1\">\n              <input\n                ref={emailRef}\n                id=\"email\"\n                required\n                autoFocus={true}\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                aria-invalid={actionData?.errors?.email ? true : undefined}\n                aria-describedby=\"email-error\"\n                className=\"w-full px-2 py-1 text-lg border border-gray-500 rounded\"\n              />\n              {actionData?.errors?.email && (\n                <div className=\"pt-1 text-red-700\" id=\"email-error\">\n                  {actionData.errors.email}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div>\n            <label\n              htmlFor=\"password\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Password\n            </label>\n            <div className=\"mt-1\">\n              <input\n                id=\"password\"\n                ref={passwordRef}\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                aria-invalid={actionData?.errors?.password ? true : undefined}\n                aria-describedby=\"password-error\"\n                className=\"w-full px-2 py-1 text-lg border border-gray-500 rounded\"\n              />\n              {actionData?.errors?.password && (\n                <div className=\"pt-1 text-red-700\" id=\"password-error\">\n                  {actionData.errors.password}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n          <button\n            type=\"submit\"\n            className=\"w-full px-4 py-2 text-white bg-blue-500 rounded hover:bg-blue-600 focus:bg-blue-400\"\n          >\n            Log in\n          </button>\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center\">\n              <input\n                id=\"remember\"\n                name=\"remember\"\n                type=\"checkbox\"\n                className=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\n              />\n              <label\n                htmlFor=\"remember\"\n                className=\"block ml-2 text-sm text-gray-900\"\n              >\n                Remember me\n              </label>\n            </div>\n            <div className=\"text-sm text-center text-gray-500\">\n              Don't have an account?{\" \"}\n              <Link\n                className=\"text-blue-500 underline\"\n                to={{\n                  pathname: \"/join\",\n                  search: searchParams.toString(),\n                }}\n              >\n                Sign up\n              </Link>\n            </div>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "import type { LoaderFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { Form, Link, NavLink, Outlet, useLoaderData } from \"@remix-run/react\";\n\nimport { requireUserId } from \"~/session.server\";\nimport { useUser } from \"~/utils\";\nimport { getNoteListItems } from \"~/models/note.server\";\n\ntype LoaderData = {\n  noteListItems: Awaited<ReturnType<typeof getNoteListItems>>;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await requireUserId(request);\n  const noteListItems = await getNoteListItems({ userId });\n  return json<LoaderData>({ noteListItems });\n};\n\nexport default function NotesPage() {\n  const data = useLoaderData() as LoaderData;\n  const user = useUser();\n\n  return (\n    <div className=\"flex flex-col h-full min-h-screen\">\n      <header className=\"flex items-center justify-between p-4 text-white bg-slate-800\">\n        <h1 className=\"text-3xl font-bold\">\n          <Link to=\".\">Notes</Link>\n        </h1>\n        <p>{user.email}</p>\n        <Form action=\"/logout\" method=\"post\">\n          <button\n            type=\"submit\"\n            className=\"px-4 py-2 text-blue-100 rounded bg-slate-600 hover:bg-blue-500 active:bg-blue-600\"\n          >\n            Logout\n          </button>\n        </Form>\n      </header>\n\n      <main className=\"flex h-full bg-white\">\n        <div className=\"h-full border-r w-80 bg-gray-50\">\n          <Link to=\"new\" className=\"block p-4 text-xl text-blue-500\">\n            + New Note\n          </Link>\n\n          <hr />\n\n          {data.noteListItems.length === 0 ? (\n            <p className=\"p-4\">No notes yet</p>\n          ) : (\n            <ol>\n              {data.noteListItems.map((note) => (\n                <li key={note.id}>\n                  <NavLink\n                    className={({ isActive }) =>\n                      `block border-b p-4 text-xl ${isActive ? \"bg-white\" : \"\"}`\n                    }\n                    to={note.id}\n                  >\n                    \uD83D\uDCDD {note.title}\n                  </NavLink>\n                </li>\n              ))}\n            </ol>\n          )}\n        </div>\n\n        <div className=\"flex-1 p-6\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n}\n", "import arc from \"@architect/functions\";\nimport cuid from \"cuid\";\n\nimport type { User } from \"./user.server\";\n\nexport type Note = {\n  id: ReturnType<typeof cuid>;\n  userId: User[\"id\"];\n  title: string;\n  body: string;\n};\n\ntype NoteItem = {\n  pk: User[\"id\"];\n  sk: `note#${Note[\"id\"]}`;\n};\n\nconst skToId = (sk: NoteItem[\"sk\"]): Note[\"id\"] => sk.replace(/^note#/, \"\");\nconst idToSk = (id: Note[\"id\"]): NoteItem[\"sk\"] => `note#${id}`;\n\nexport async function getNote({\n  id,\n  userId,\n}: Pick<Note, \"id\" | \"userId\">): Promise<Note | null> {\n  const db = await arc.tables();\n\n  const result = await db.note.get({ pk: userId, sk: idToSk(id) });\n\n  if (result) {\n    return {\n      userId: result.pk,\n      id: result.sk,\n      title: result.title,\n      body: result.body,\n    };\n  }\n  return null;\n}\n\nexport async function getNoteListItems({\n  userId,\n}: Pick<Note, \"userId\">): Promise<Array<Pick<Note, \"id\" | \"title\">>> {\n  const db = await arc.tables();\n\n  const result = await db.note.query({\n    KeyConditionExpression: \"pk = :pk\",\n    ExpressionAttributeValues: { \":pk\": userId },\n  });\n\n  return result.Items.map((n: any) => ({\n    title: n.title,\n    id: skToId(n.sk),\n  }));\n}\n\nexport async function createNote({\n  body,\n  title,\n  userId,\n}: Pick<Note, \"body\" | \"title\" | \"userId\">): Promise<Note> {\n  const db = await arc.tables();\n\n  const result = await db.note.put({\n    pk: userId,\n    sk: idToSk(cuid()),\n    title: title,\n    body: body,\n  });\n  return {\n    id: skToId(result.sk),\n    userId: result.pk,\n    title: result.title,\n    body: result.body,\n  };\n}\n\nexport async function deleteNote({ id, userId }: Pick<Note, \"id\" | \"userId\">) {\n  const db = await arc.tables();\n  return db.note.delete({ pk: userId, sk: idToSk(id) });\n}\n", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useCatch, useLoaderData } from \"@remix-run/react\";\nimport invariant from \"tiny-invariant\";\n\nimport { deleteNote } from \"~/models/note.server\";\nimport { getNote } from \"~/models/note.server\";\nimport { requireUserId } from \"~/session.server\";\n\ntype LoaderData = {\n  note: NonNullable<Awaited<ReturnType<typeof getNote>>>;\n};\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const userId = await requireUserId(request);\n  invariant(params.noteId, \"noteId not found\");\n\n  const note = await getNote({ userId, id: params.noteId });\n  if (!note) {\n    throw new Response(\"Not Found\", { status: 404 });\n  }\n  return json<LoaderData>({ note });\n};\n\nexport const action: ActionFunction = async ({ request, params }) => {\n  const userId = await requireUserId(request);\n  invariant(params.noteId, \"noteId not found\");\n\n  await deleteNote({ userId, id: params.noteId });\n\n  return redirect(\"/notes\");\n};\n\nexport default function NoteDetailsPage() {\n  const data = useLoaderData() as LoaderData;\n\n  return (\n    <div>\n      <h3 className=\"text-2xl font-bold\">{data.note.title}</h3>\n      <p className=\"py-6\">{data.note.body}</p>\n      <hr className=\"my-4\" />\n      <Form method=\"post\">\n        <button\n          type=\"submit\"\n          className=\"rounded bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\n        >\n          Delete\n        </button>\n      </Form>\n    </div>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n\n  return <div>An unexpected error occurred: {error.message}</div>;\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  if (caught.status === 404) {\n    return <div>Note not found</div>;\n  }\n\n  throw new Error(`Unexpected caught response with status: ${caught.status}`);\n}\n", "import { Link } from \"@remix-run/react\";\n\nexport default function NoteIndexPage() {\n  return (\n    <p>\n      No note selected. Select a note on the left, or{\" \"}\n      <Link to=\"new\" className=\"text-blue-500 underline\">\n        create a new note.\n      </Link>\n    </p>\n  );\n}\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useActionData } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nimport { createNote } from \"~/models/note.server\";\nimport { requireUserId } from \"~/session.server\";\n\ntype ActionData = {\n  errors?: {\n    title?: string;\n    body?: string;\n  };\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const userId = await requireUserId(request);\n\n  const formData = await request.formData();\n  const title = formData.get(\"title\");\n  const body = formData.get(\"body\");\n\n  if (typeof title !== \"string\" || title.length === 0) {\n    return json<ActionData>(\n      { errors: { title: \"Title is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof body !== \"string\" || body.length === 0) {\n    return json<ActionData>(\n      { errors: { body: \"Body is required\" } },\n      { status: 400 }\n    );\n  }\n\n  const note = await createNote({ title, body, userId });\n\n  return redirect(`/notes/${note.id}`);\n};\n\nexport default function NewNotePage() {\n  const actionData = useActionData() as ActionData;\n  const titleRef = React.useRef<HTMLInputElement>(null);\n  const bodyRef = React.useRef<HTMLTextAreaElement>(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.title) {\n      titleRef.current?.focus();\n    } else if (actionData?.errors?.body) {\n      bodyRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <Form\n      method=\"post\"\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: 8,\n        width: \"100%\",\n      }}\n    >\n      <div>\n        <label className=\"flex w-full flex-col gap-1\">\n          <span>Title: </span>\n          <input\n            ref={titleRef}\n            name=\"title\"\n            className=\"flex-1 rounded-md border-2 border-blue-500 px-3 text-lg leading-loose\"\n            aria-invalid={actionData?.errors?.title ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.title ? \"title-error\" : undefined\n            }\n          />\n        </label>\n        {actionData?.errors?.title && (\n          <div className=\"pt-1 text-red-700\" id=\"title-error\">\n            {actionData.errors.title}\n          </div>\n        )}\n      </div>\n\n      <div>\n        <label className=\"flex w-full flex-col gap-1\">\n          <span>Body: </span>\n          <textarea\n            ref={bodyRef}\n            name=\"body\"\n            rows={8}\n            className=\"w-full flex-1 rounded-md border-2 border-blue-500 py-2 px-3 text-lg leading-6\"\n            aria-invalid={actionData?.errors?.body ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.body ? \"body-error\" : undefined\n            }\n          />\n        </label>\n        {actionData?.errors?.body && (\n          <div className=\"pt-1 text-red-700\" id=\"body-error\">\n            {actionData.errors.body}\n          </div>\n        )}\n      </div>\n\n      <div className=\"text-right\">\n        <button\n          type=\"submit\"\n          className=\"rounded bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\n        >\n          Save\n        </button>\n      </div>\n    </Form>\n  );\n}\n", "import type {\n  ActionFunction,\n  LoaderFunction,\n  MetaFunction,\n} from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nimport { getUserId, createUserSession } from \"~/session.server\";\n\nimport { createUser, getUserByEmail } from \"~/models/user.server\";\nimport { safeRedirect, validateEmail } from \"~/utils\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const userId = await getUserId(request);\n  if (userId) return redirect(\"/\");\n  return json({});\n};\n\ninterface ActionData {\n  errors: {\n    email?: string;\n    password?: string;\n  };\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"), \"/\");\n\n  if (!validateEmail(email)) {\n    return json<ActionData>(\n      { errors: { email: \"Email is invalid\" } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof password !== \"string\" || password.length === 0) {\n    return json<ActionData>(\n      { errors: { password: \"Password is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (password.length < 8) {\n    return json<ActionData>(\n      { errors: { password: \"Password is too short\" } },\n      { status: 400 }\n    );\n  }\n\n  const existingUser = await getUserByEmail(email);\n  if (existingUser) {\n    return json<ActionData>(\n      { errors: { email: \"A user already exists with this email\" } },\n      { status: 400 }\n    );\n  }\n\n  const user = await createUser(email, password);\n\n  return createUserSession({\n    request,\n    userId: user.id,\n    remember: false,\n    redirectTo,\n  });\n};\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"Sign Up\",\n  };\n};\n\nexport default function Join() {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") ?? undefined;\n  const actionData = useActionData() as ActionData;\n  const emailRef = React.useRef<HTMLInputElement>(null);\n  const passwordRef = React.useRef<HTMLInputElement>(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.email) {\n      emailRef.current?.focus();\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <div className=\"flex flex-col justify-center min-h-full\">\n      <div className=\"w-full max-w-md px-8 mx-auto\">\n        <Form method=\"post\" className=\"space-y-6\" noValidate>\n          <div>\n            <label\n              htmlFor=\"email\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Email address\n            </label>\n            <div className=\"mt-1\">\n              <input\n                ref={emailRef}\n                id=\"email\"\n                required\n                autoFocus={true}\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                aria-invalid={actionData?.errors?.email ? true : undefined}\n                aria-describedby=\"email-error\"\n                className=\"w-full px-2 py-1 text-lg border border-gray-500 rounded\"\n              />\n              {actionData?.errors?.email && (\n                <div className=\"pt-1 text-red-700\" id=\"email-error\">\n                  {actionData.errors.email}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div>\n            <label\n              htmlFor=\"password\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Password\n            </label>\n            <div className=\"mt-1\">\n              <input\n                id=\"password\"\n                ref={passwordRef}\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"new-password\"\n                aria-invalid={actionData?.errors?.password ? true : undefined}\n                aria-describedby=\"password-error\"\n                className=\"w-full px-2 py-1 text-lg border border-gray-500 rounded\"\n              />\n              {actionData?.errors?.password && (\n                <div className=\"pt-1 text-red-700\" id=\"password-error\">\n                  {actionData.errors.password}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n          <button\n            type=\"submit\"\n            className=\"w-full px-4 py-2 text-white bg-blue-500 rounded hover:bg-blue-600 focus:bg-blue-400\"\n          >\n            Create Account\n          </button>\n          <div className=\"flex items-center justify-center\">\n            <div className=\"text-sm text-center text-gray-500\">\n              Already have an account?{\" \"}\n              <Link\n                className=\"text-blue-500 underline\"\n                to={{\n                  pathname: \"/login\",\n                  search: searchParams.toString(),\n                }}\n              >\n                Log in\n              </Link>\n            </div>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\n\nimport { createUser } from \"~/models/user.server\";\nimport { createUserSession } from \"~/session.server\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  if (process.env.NODE_ENV === \"production\") {\n    console.error(\n      \"\uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 test routes should not be enabled in production \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8 \uD83D\uDEA8\"\n    );\n    // test routes should not be enabled in production or without\n    // enable test routes... Just in case this somehow slips through\n    // we'll redirect :)\n    return redirect(\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\");\n  }\n\n  const { email } = await request.json();\n  if (!email) {\n    throw new Error(\"email required for login\");\n  }\n  if (!email.endsWith(\"@example.com\")) {\n    throw new Error(\"All test emails must end in @example.com\");\n  }\n\n  const user = await createUser(email, \"myreallystrongpassword\");\n\n  return createUserSession({\n    request,\n    userId: user.id,\n    remember: true,\n    redirectTo: \"/\",\n  });\n};\n\nexport default null;\n", "export default {'version':'ac98d40f','entry':{'module':'/_static/build/entry.client-TA5NS2NU.js','imports':['/_static/build/_shared/chunk-D2FZPMIS.js','/_static/build/_shared/chunk-NTN7YPXJ.js']},'routes':{'../cypress/support/test-routes/create-user':{'id':'../cypress/support/test-routes/create-user','parentId':'root','path':'__tests/create-user','index':undefined,'caseSensitive':undefined,'module':'/_static/build/_.._/cypress/support/test-routes/create-user-PKFUPL36.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/_static/build/root-Y27ZO6IO.js','imports':['/_static/build/_shared/chunk-HIOSVDOV.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/_static/build/routes/index-4H6K3NBW.js','imports':['/_static/build/_shared/chunk-CY24FURM.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/join':{'id':'routes/join','parentId':'root','path':'join','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/join-D3AXO4A7.js','imports':['/_static/build/_shared/chunk-BSRRWFSI.js','/_static/build/_shared/chunk-XMI3USBO.js','/_static/build/_shared/chunk-CY24FURM.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/login-LP5HOMCP.js','imports':['/_static/build/_shared/chunk-BSRRWFSI.js','/_static/build/_shared/chunk-XMI3USBO.js','/_static/build/_shared/chunk-CY24FURM.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/logout-BLEMLIX5.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes':{'id':'routes/notes','parentId':'root','path':'notes','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/notes-MXT7PHLU.js','imports':['/_static/build/_shared/chunk-ATZBVMZP.js','/_static/build/_shared/chunk-XMI3USBO.js','/_static/build/_shared/chunk-CY24FURM.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes/$noteId':{'id':'routes/notes/$noteId','parentId':'routes/notes','path':':noteId','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/notes/$noteId-I6ZGU2IO.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/notes/index':{'id':'routes/notes/index','parentId':'routes/notes','path':undefined,'index':true,'caseSensitive':undefined,'module':'/_static/build/routes/notes/index-K4SENMN5.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes/new':{'id':'routes/notes/new','parentId':'routes/notes','path':'new','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/notes/new-VAMJLZUA.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/shares/$shareCode':{'id':'routes/shares/$shareCode','parentId':'root','path':'shares/:shareCode','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/shares/$shareCode-MNQOFSXN.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/shares/index':{'id':'routes/shares/index','parentId':'root','path':'shares','index':true,'caseSensitive':undefined,'module':'/_static/build/routes/shares/index-7CS4HXEV.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/shares/query-share-data':{'id':'routes/shares/query-share-data','parentId':'root','path':'shares/query-share-data','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/shares/query-share-data-CDVXR7PS.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/_static/build/manifest-AC98D40F.js'};"],
  "mappings": "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",
  "names": []
}
